/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package micpro;

import javax.swing.table.*;
import javax.swing.*;
import java.awt.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;
import java.awt.event.*;
import javax.swing.table.TableCellRenderer;
import java.awt.Cursor;
import javax.swing.ImageIcon;
import java.sql.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.FocusAdapter;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.awt.event.MouseAdapter;
import javax.swing.JOptionPane;
import java.text.SimpleDateFormat;
import java.util.Calendar;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ashok
 */
public class ClientRequirement extends javax.swing.JFrame {
String ide;
JFrame fr,fr1;
int invo1;
	Connection con1;
float[] ff ={0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f};         
float[] amt ={0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f};
float[] GST1 ={0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f};
float sub_amt=0.0f;
float net_amt;
float tax=0.0f;


    /**
     * Creates new form ClientRequirement
     */
    public ClientRequirement(JFrame ft) {
        fr=ft;
        mno(this);
        initComponents();
	setLocation(200,100);
      setTitle("Client Requirement");
        getContentPane().setBackground(new java.awt.Color(245,245,245));
    }
public void mno(JFrame ft1)
{
    fr1=ft1;
}
public static void abc(String a,String b,String c,String d,String e,String f,String g,String h)
{

DefaultTableModel model1=(DefaultTableModel)jTable1.getModel();
model1.addRow(new Object[]{h,a,b,c,d,e,f,g});
 
}

public static void def(String aa,String bb,String cc)
{
mClientRequirementTextFieldName.setText(aa);
mClientRequirementTextFieldContactNo.setText(cc);
mClientRequirementTextFieldAadhar.setText(bb);
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        mClientRequirementButtonAddProduct = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        mClientRequirementLabelDeleteImage = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        mClientRequirementTextFieldAadhar = new javax.swing.JTextField();
        mClientRequirementButtonNewClientRegistration = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        mClientRequirementTextFieldName = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        mClientRequirementTextFieldContactNo = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        mClientRequirementTextFieldGSTNo = new javax.swing.JTextField();
        mClientRequirementButtonCancel = new javax.swing.JButton();
        mClientRequirementButtonReset = new javax.swing.JButton();
        mClientRequirementButtonFinish = new javax.swing.JButton();

        //setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent windowEvent){
               dispose();
               fr.setEnabled(true);
         }        
      });   
        jPanel6.setBackground(new java.awt.Color(245, 245, 245));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Select Product", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        mClientRequirementButtonAddProduct.setText("ADD PRODUCT");
        mClientRequirementButtonAddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mClientRequirementButtonAddProductActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Id", "Box Type", "Box Size", "Quantity", "No of Walls", "Flute Type", "Stiching/Pasting", "Printed ?"
            }
        ));
        TableCellRenderer rendererFromHeader = jTable1.getTableHeader().getDefaultRenderer();
        JLabel headerLabel = (JLabel) rendererFromHeader;
        headerLabel.setHorizontalAlignment(JLabel.CENTER);
        jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(90);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(170);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(150);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(115);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(70);
        jTable1.getColumnModel().getColumn(6).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(7).setPreferredWidth(72);
       jScrollPane1.setViewportView(jTable1);
//jTable1.setEnabled(false);
        mClientRequirementLabelDeleteImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("images/del.png"))); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 853, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(25, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(mClientRequirementButtonAddProduct)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(mClientRequirementLabelDeleteImage)
                        .addGap(36, 36, 36))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mClientRequirementButtonAddProduct)
                    .addComponent(mClientRequirementLabelDeleteImage))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        jPanel7.setBackground(new java.awt.Color(245, 245, 245));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Client Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel34.setText("Select Client Using Aadhar No");

        jLabel36.setText("OR");

        mClientRequirementTextFieldAadhar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mClientRequirementTextFieldAadharActionPerformed(evt);
            }
        });
        
        mClientRequirementTextFieldAadhar.addKeyListener(new KeyAdapter()            //pincode validaion
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(((c<'0') || (c>'9')) && (c!=KeyEvent.VK_BACK_SPACE))
                {
                    e.consume();//ignore event
                }
                else if(mClientRequirementTextFieldAadhar.getText().length()>11)
                {
                   e.consume();
                }
               
            }
        });


mClientRequirementTextFieldName.setEditable(false);
mClientRequirementTextFieldContactNo.setEditable(false);	
   

mClientRequirementTextFieldAadhar.addFocusListener(new FocusAdapter()
        {
        	public void focusGained(FocusEvent fe)
	{
		
		
try
{
Connection con = dao.createconnection();
PreparedStatement ps4 = con.prepareStatement("select * from Req");
ResultSet rs1=ps4.executeQuery();
if(rs1.last())
{
String inv=rs1.getString(3);
int invo=Integer.parseInt(inv);
invo1=invo+1;

if(invo1<10)
{
ide="000"+Integer.toString(invo1);
}
else if(invo1<100)
{
ide="00"+Integer.toString(invo1);
}
else if(invo1<1000)
{
ide="000"+Integer.toString(invo1);
}

else{
ide=Integer.toString(invo1);
}

}

else
{
//invo1=0001;
ide="0001";
}

}
catch(Exception ee)
{
System.out.print(ee);
}





	}
       });
try{
       	 con1 = dao.createconnection();
}
catch(Exception e){}
mClientRequirementTextFieldAadhar.addKeyListener(new KeyAdapter()
        {
        	public void keyPressed(KeyEvent fe)
	{
	}

	public void keyReleased(KeyEvent fe)
	{
				mClientRequirementTextFieldName.setText("");
				mClientRequirementTextFieldContactNo.setText("");	
          	
          
				try
				{
					PreparedStatement ps = con1.prepareStatement("select * from NewClient where AadharNo=?");
					ps.setString(1,mClientRequirementTextFieldAadhar.getText());
					ResultSet rs = ps.executeQuery();
					if(rs.next())
					{

					mClientRequirementTextFieldName.setText(rs.getString(1)+" "+rs.getString(2));
					mClientRequirementTextFieldContactNo.setText(rs.getString(13));	
          
					 }
				}
                	catch(Exception e)
                	{
                    e.printStackTrace();
                	}


}
});

      mClientRequirementButtonAddProduct.setToolTipText("Add Item");
      mClientRequirementButtonAddProduct.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));

      mClientRequirementButtonNewClientRegistration.setText("New Client Registration");
      mClientRequirementButtonNewClientRegistration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mClientRequirementButtonNewClientRegistrationActionPerformed(evt);
            }
        });
      mClientRequirementButtonNewClientRegistration.setToolTipText("Add New Client");
      mClientRequirementButtonNewClientRegistration.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));

      mClientRequirementLabelDeleteImage.setToolTipText("Delete Item");
      mClientRequirementLabelDeleteImage.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
      mClientRequirementLabelDeleteImage.addMouseListener(new MouseAdapter()
		{
			
			public void mouseClicked(MouseEvent me)
			{
				
				int a=JOptionPane.showConfirmDialog(new javax.swing.JFrame(),"Are you sure?");  
				if(a==JOptionPane.YES_OPTION)
				{  
				DefaultTableModel models = (DefaultTableModel)jTable1.getModel();
  				 int[] rows = jTable1.getSelectedRows();
				 for(int i=0;i<rows.length;i++)
				{
		String  id=models.getValueAt(rows[i], 0).toString();

		try					
                                    {
                                    //Connection con = dao.createconnection();
                                     PreparedStatement ps3 = con1.prepareStatement("delete from design where Product_id=?");
		ps3.setString(1,id);  
	                   int flag=ps3.executeUpdate();
		
                                        if(flag>0)
                                        {
                                                //System.out.println("record deleted.....");
                                        }
                                        else
                                        {
                                          //      System.out.println("record not deleted.....");
                                        }

                                    }
                                    catch(Exception e){
                                        e.printStackTrace();
                                     }




 
  				 models.removeRow(rows[i]-i);
				}
				}
				

			}
		});







        jLabel40.setText("Name ");

        mClientRequirementTextFieldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mClientRequirementTextFieldNameActionPerformed(evt);
            }
        });

        jLabel41.setText("Contact Number");

        mClientRequirementTextFieldContactNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mClientRequirementTextFieldContactNoActionPerformed(evt);
            }
        });

        jLabel42.setText("Enter GST Number");

        mClientRequirementTextFieldGSTNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mClientRequirementTextFieldGSTNoActionPerformed(evt);
            }
        });



        mClientRequirementTextFieldGSTNo.addKeyListener(new KeyAdapter()
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if((c>=32 && c<=47 || c>=58 && c<=64 || c>=91 && c<=96 ||c>=123 && c<=127))
                {
                    e.consume();//ignore event
                }
                else if(mClientRequirementTextFieldGSTNo.getText().length()>15)
                {
                   e.consume();
                }
                
            }
        });

     /*   mClientRequirementTextFieldGSTNo.addFocusListener(new FocusAdapter()
		{
			public void focusGained(FocusEvent fe)
			{
			}
			public void focusLost(FocusEvent fe)
			{
				if(mClientRequirementTextFieldGSTNo.getText().trim().length()>0)
        				{
        			        Pattern pattern = Pattern.compile("^([0][1-9]|[1-2][0-9]|[3][0-5])([a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}[1-9a-zA-Z]{1}[zZ]{1}[0-9a-zA-Z]{1})+$", Pattern.CASE_INSENSITIVE);
           				Matcher m=pattern.matcher(mClientRequirementTextFieldGSTNo.getText());
           				Boolean b=m.matches();
           				if(b!=true)
           				{
           				    JOptionPane.showMessageDialog(new javax.swing.JFrame(),"Invalid GST No");
           				}
      			}
		}	
		});

*/
        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel34)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(mClientRequirementTextFieldAadhar, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(61, 61, 61)
                                .addComponent(jLabel36)
                                .addGap(61, 61, 61)
                                .addComponent(mClientRequirementButtonNewClientRegistration)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mClientRequirementTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel40))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel41)
                            .addComponent(mClientRequirementTextFieldContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mClientRequirementTextFieldGSTNo, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel42))
                        .addGap(18, 18, 18))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mClientRequirementTextFieldAadhar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36)
                    .addComponent(mClientRequirementButtonNewClientRegistration))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(jLabel41)
                    .addComponent(jLabel42))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mClientRequirementTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mClientRequirementTextFieldContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mClientRequirementTextFieldGSTNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        mClientRequirementButtonCancel.setText("Cancel");
        mClientRequirementButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mClientRequirementButtonCancelActionPerformed(evt);
            }
        });
      mClientRequirementButtonCancel.setToolTipText("Cancel");
	mClientRequirementButtonCancel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));

        mClientRequirementButtonReset.setText("Reset");
        mClientRequirementButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mClientRequirementButtonResetActionPerformed(evt);
            }
        });
      mClientRequirementButtonReset.setToolTipText("Reset");
	mClientRequirementButtonReset.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));

        mClientRequirementButtonFinish.setText("Finish");
        mClientRequirementButtonFinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mClientRequirementButtonFinishActionPerformed(evt);
            }
        });
      mClientRequirementButtonFinish.setToolTipText("Finish");
	mClientRequirementButtonFinish.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));







        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(mClientRequirementButtonFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(mClientRequirementButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(mClientRequirementButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mClientRequirementButtonCancel)
                    .addComponent(mClientRequirementButtonReset)
                    .addComponent(mClientRequirementButtonFinish))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void mClientRequirementTextFieldAadharActionPerformed(java.awt.event.ActionEvent evt) {                                                                  
        // TODO add your handling code here:
    }                                                                 

    private void mClientRequirementButtonAddProductActionPerformed(java.awt.event.ActionEvent evt) {                                                                   
      if(!(mClientRequirementTextFieldName.getText().equals(""))){
           fr1.setEnabled(false);
    new ItemDetails1(mClientRequirementTextFieldAadhar.getText(),fr,fr1).setVisible(true);
   
}
else
{
JOptionPane.showMessageDialog(new javax.swing.JFrame(),"Please Add Client First");
}

    }                                                                  

    private void mClientRequirementTextFieldNameActionPerformed(java.awt.event.ActionEvent evt) {                                                                
        // TODO add your handling code here:
    }                                                               

    private void mClientRequirementTextFieldContactNoActionPerformed(java.awt.event.ActionEvent evt) {                                                                     
        // TODO add your handling code here:
    }                                                                    

    private void mClientRequirementTextFieldGSTNoActionPerformed(java.awt.event.ActionEvent evt) {                                                                 
        // TODO add your handling code here:
    }                                                                

    private void mClientRequirementButtonFinishActionPerformed(java.awt.event.ActionEvent evt) {                                                               
DefaultTableModel model9=(DefaultTableModel)jTable1.getModel();
int xx=model9.getRowCount();       

if(mClientRequirementTextFieldName.getText().equals(""))
{
	JOptionPane.showMessageDialog(new javax.swing.JFrame(),"Please Add Client");
}
else if(mClientRequirementTextFieldGSTNo.getText().equals(""))
{
	JOptionPane.showMessageDialog(new javax.swing.JFrame(),"Please Enter GST No");
}
else if(xx==0)
{
        JOptionPane.showMessageDialog(new javax.swing.JFrame(),"Please add item");	
}
else if(mClientRequirementTextFieldGSTNo.getText().trim().length()<15)
           {
                     JOptionPane.showMessageDialog(new javax.swing.JFrame(),"Invalid GST No");	
  
           }
else if(mClientRequirementTextFieldGSTNo.getText().trim().length()>0)
{
         			        Pattern pattern = Pattern.compile("^([0][1-9]|[1-2][0-9]|[3][0-5])([a-zA-Z]{5}[0-9]{4}[a-zA-Z]{1}[1-9a-zA-Z]{1}[zZ]{1}[0-9a-zA-Z]{1})+$", Pattern.CASE_INSENSITIVE);
           				Matcher m=pattern.matcher(mClientRequirementTextFieldGSTNo.getText());
           				Boolean b=m.matches();
           				if(b!=true)
           				{
           				    JOptionPane.showMessageDialog(new javax.swing.JFrame(),"Invalid GST No");
           				}
                                        else
{

for(int k=0;k<xx;k++)
{
String  ty=model9.getValueAt(k,2).toString();
String  lbh[]=ty.split(" X ");    
String  he[]=lbh[2].split(" ");   
String  qa=model9.getValueAt(k,3).toString();
String  wa=model9.getValueAt(k,4).toString()+" ";  //space
String  fl=model9.getValueAt(k,5).toString()+" ";     //space
String  st=model9.getValueAt(k,6).toString()+" ";    //space
String  pr=model9.getValueAt(k,7).toString()+" ";    //space
String  bo=model9.getValueAt(k,1).toString();    
ff[k] = Cost.Cost1(lbh[0],lbh[1],he[0],he[1],qa,wa,fl,st,pr,bo);   
amt[k]=ff[k]/(Float.parseFloat(qa));
GST1[k]=ff[k]*0.12f;
}


float sub_amt=0.0f;
float tax=0.0f;
for(int w=0;w<xx;w++)
{ 
sub_amt=sub_amt+ff[w]; 
tax=tax+GST1[w];
}   
float net_amt=sub_amt+tax;




try					
    {
    //Connection con = dao.createconnection();
    PreparedStatement ps1 = con1.prepareStatement("insert into Req values(?,?,?,?,?,?,?,?,?,?,?,?,?)");
					
    int j;
   DefaultTableModel model5=(DefaultTableModel)jTable1.getModel();
   int x=model5.getRowCount();
   for(j=0;j<x;j++)
   {
   String  id=model5.getValueAt(j, 0).toString();
   String boxtype=model5.getValueAt(j, 1).toString();
   String size=model5.getValueAt(j,2 ).toString();
    String qua=model5.getValueAt(j,3 ).toString();
     String walls=model5.getValueAt(j,4 ).toString();
     String flute=model5.getValueAt(j,5 ).toString();
     String stipas=model5.getValueAt(j,6).toString();
     String printed=model5.getValueAt(j,7 ).toString();
   ps1.setString(1,id);
   ps1.setString(2,mClientRequirementTextFieldAadhar.getText());
   ps1.setString(3,ide);
   ps1.setString(4,boxtype);
   ps1.setString(5,size);
    ps1.setString(6,qua);
   ps1.setString(7,walls);
   ps1.setString(8,flute);
    ps1.setString(9,stipas);
 ps1.setString(10,printed);
 ps1.setString(11,Float.toString(amt[j]));
 ps1.setString(12,Float.toString(ff[j]));
 ps1.setString(13,"12%");
   int flag=ps1.executeUpdate();
		
		if(flag>0)
		{
		//JOptionPane.showMessageDialog(new javax.swing.JFrame(),"Item added Successfully");
		}
		else
		{
			//System.out.println("record not inserted.....");
		}


   }


		String DATE_FORMAT = "dd-MMM-yyyy";
		SimpleDateFormat sdf = new SimpleDateFormat(DATE_FORMAT);
    		Calendar c1 = Calendar.getInstance();
       		String date=sdf.format(c1.getTime());

   DefaultTableModel model7=(DefaultTableModel)jTable1.getModel();
   int x1=model7.getRowCount();
   String x2=Integer.toString(x1);


    //Connection con1 = dao.createconnection();
    PreparedStatement ps0 = con1.prepareStatement("insert into extra1 values(?,?,?,?,?,?,?)");
    ps0.setString(1,ide);
    ps0.setString(2,date);
    ps0.setString(3,Float.toString(tax));
    ps0.setString(4,Float.toString(net_amt));
    ps0.setString(5,Float.toString(sub_amt));
    ps0.setString(6,x2);
    ps0.setString(7,mClientRequirementTextFieldGSTNo.getText());
    int flag5=ps0.executeUpdate();
		
		if(flag5>0)
		{
			 
						Object[] options = {"YES","NO"};
					int n = JOptionPane.showOptionDialog(null,
				            "Order Created Successfully\n Want To Print ?",
				            "Message",
				            JOptionPane.YES_NO_CANCEL_OPTION,
				            JOptionPane.DEFAULT_OPTION,
				            null,
				            options,
				            options[1]); 

					if(n==0){  
						
					dispose();
					new TaxInvoice1(ide,fr).setVisible(true);					
					}

		}
		else
		{
		//	System.out.println("record not inserted.....");
		}

    





mClientRequirementTextFieldGSTNo.setText("");
        mClientRequirementTextFieldAadhar.setText("");
        mClientRequirementTextFieldContactNo.setText("");
        mClientRequirementTextFieldName.setText("");
	DefaultTableModel modelo=(DefaultTableModel)jTable1.getModel(); 
     	while(modelo.getRowCount() > 0)
	{
	    modelo.removeRow(0);
	}
		
}					
    catch(Exception e)
                {
                    e.printStackTrace();
                }





                                        
                                        }
}
else{}
}                                                              

    private void mClientRequirementButtonResetActionPerformed(java.awt.event.ActionEvent evt) {                                                              
        mClientRequirementTextFieldGSTNo.setText("");
        mClientRequirementTextFieldAadhar.setText("");
        mClientRequirementTextFieldContactNo.setText("");
        mClientRequirementTextFieldName.setText("");
	DefaultTableModel model5=(DefaultTableModel)jTable1.getModel(); 
     	while(model5.getRowCount() > 0)
	{
	    model5.removeRow(0);
	}


    }                                                             

    private void mClientRequirementButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {                                                               
        dispose();// TODO add your handling code here:
        new InvoiceDashboard(fr).setVisible(true);
    }                                                              

    private void mClientRequirementButtonNewClientRegistrationActionPerformed(java.awt.event.ActionEvent evt) {                                                                              
fr1.setEnabled(false);
new AddClient(1,fr,fr1).setVisible(true);    

// TODO add your handling code here:
    }                                                                             

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientRequirement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientRequirement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientRequirement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientRequirement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientRequirement(new JFrame()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable1;
    private javax.swing.JButton mClientRequirementButtonAddProduct;
    private javax.swing.JButton mClientRequirementButtonCancel;
    private javax.swing.JButton mClientRequirementButtonFinish;
    private javax.swing.JButton mClientRequirementButtonNewClientRegistration;
    private javax.swing.JButton mClientRequirementButtonReset;
    private javax.swing.JLabel mClientRequirementLabelDeleteImage;
    public static javax.swing.JTextField mClientRequirementTextFieldAadhar;
    public static javax.swing.JTextField mClientRequirementTextFieldContactNo;
    private javax.swing.JTextField mClientRequirementTextFieldGSTNo;
    public static javax.swing.JTextField mClientRequirementTextFieldName;
    // End of variables declaration                   
}

