/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package micpro;

import java.awt.event.*;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JColorChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Dell
 */



// DeleteItem()
public class DeleteItem extends javax.swing.JFrame {
     String hex="";
     JFrame fr;
    /**
     * Creates new form DeleteItem
     */
    public DeleteItem(JFrame ft) {
        fr=ft;
setTitle("Delete Stock");
setLocation(380,150);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        mSheetsTextFieldPaperWeight = new javax.swing.JTextField();
        mSheetsComboBoxColor = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        mSheetsTextFieldQuantity = new javax.swing.JTextField();
        mSheetsTextFieldPaperWidth = new javax.swing.JTextField();
        mSheetsTextFieldPaperThickness = new javax.swing.JTextField();
        mSheetsComboBoxType = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        mSheetsButtonSearch = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        mDyeComboBoxType = new javax.swing.JComboBox();
        mDyeTextFieldDryingSpeed = new javax.swing.JTextField();
        mDyeTextFieldGCMICode = new javax.swing.JTextField();
        mDyeTextFieldQuantity = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        mDyeComboBoxBrand = new javax.swing.JComboBox();
        mDyeButtonSearch = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        mTapeComboBoxBackingMaterial = new javax.swing.JComboBox();
        jLabel42 = new javax.swing.JLabel();
        javax.swing.JTextField mTapeTextFieldTotalThickness = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        mTapeComboBoxColor = new javax.swing.JComboBox<>();
        mTapeComboBoxType = new javax.swing.JComboBox<>();
        jLabel44 = new javax.swing.JLabel();
        mTapeTextFieldLength = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        mTapeTextFieldQuantity = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        mTapeButtonSearch = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        mGlueTextFieldGelTime = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        mGlueTextFieldMoistureContent = new javax.swing.JTextField();
        mGlueComboBoxColor = new javax.swing.JComboBox<>();
        mGlueTextFieldViscosity = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        mGlueTextFieldQuantity = new javax.swing.JTextField();
        mGlueButtonSearch = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        mPinsComboBoxMaterial = new javax.swing.JComboBox();
        jLabel46 = new javax.swing.JLabel();
        mPinsTextFieldSize = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        mPinsComboBoxColor = new javax.swing.JComboBox<>();
        mPinsComboBoxCrown = new javax.swing.JComboBox<>();
        mComboBoxPinsGauge = new javax.swing.JComboBox<>();
        jLabel50 = new javax.swing.JLabel();
        mComboBoxPinsBrand = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        mPinsTextFieldQuantity = new javax.swing.JTextField();
        mPinsButtonSearch = new javax.swing.JButton();

        jScrollPane1.setViewportView(jTextPane1);

        //setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
         addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent windowEvent){
               dispose();
                         new InventoryDashboard(fr).setVisible(true);

         }        
      });    
        setBounds(new java.awt.Rectangle(375, 160, 615, 372));
        setResizable(false);

        jTabbedPane1.setBackground(new java.awt.Color(245, 245, 245));
        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(245, 245, 245));
        jPanel2.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(610, 342));

        jPanel1.setBackground(new java.awt.Color(245, 245, 245));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Sheets Specification", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel3.setText("Type");

        jLabel4.setText("Width  (cm)");

        jLabel6.setText("Color");

        jLabel8.setText("Paper Weight(GSM)");

        mSheetsTextFieldPaperWeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSheetsTextFieldPaperWeightActionPerformed(evt);
            }
        });
        
        mSheetsTextFieldPaperWeight.addKeyListener(new KeyAdapter()        
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(((c<'0') || (c>'9')) && (c!=KeyEvent.VK_BACK_SPACE)) //GSM
                {
                    e.consume();//ignore event
                }
                else if(mSheetsTextFieldPaperWeight.getText().length()>=10)
                {
                   e.consume();
                }
               
            }
        });

        mSheetsComboBoxColor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Light Brown", "Dark Brown", "Green", "White", "Blue", "Red", "Yellow" }));

        jLabel7.setText("Quantity  (Kg)");

        mSheetsTextFieldQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSheetsTextFieldQuantityActionPerformed(evt);
            }
        });
        
         mSheetsTextFieldQuantity.addKeyListener(new KeyAdapter()        
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(!(c>=48 && c<=57 || c==46))
                {
                    e.consume();//ignore event
                }
                else if(mSheetsTextFieldQuantity.getText().length()>=10)
                {
                   e.consume();
                }
               
            }
        });

        mSheetsTextFieldPaperWidth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSheetsTextFieldPaperWidthActionPerformed(evt);
            }
        });
        
        mSheetsTextFieldPaperWidth.addKeyListener(new KeyAdapter()        
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if (!(c>=48 && c<=57 || c==46))//(((c<'0') || (c>'9')) && (c!=KeyEvent.VK_BACK_SPACE))
                {
                    e.consume();//ignore event
                }
                else if(mSheetsTextFieldPaperWidth.getText().length()>=10)
                {
                   e.consume();
                }
               
            }
        });
        

        mSheetsTextFieldPaperThickness.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSheetsTextFieldPaperThicknessActionPerformed(evt);
            }
        });
        
        mSheetsTextFieldPaperThickness.addKeyListener(new KeyAdapter()        
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(!(c>=48 && c<=57 || c==46))
                {
                    e.consume();//ignore event
                }
                else if(mSheetsTextFieldPaperThickness.getText().length()>=10)
                {
                   e.consume();
                }
               
            }
        });

        mSheetsComboBoxType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Corrugated box Sheet", "Narrow Corrugated Roll", "Corrugated Sheet Roll", "High RCT", "Semi Chemical", "Corrugated Medium"}));

        jLabel9.setText("Thickness (cm)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(mSheetsComboBoxColor, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(mSheetsComboBoxType, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mSheetsTextFieldPaperWeight, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(mSheetsTextFieldPaperWidth)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(mSheetsTextFieldQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                        .addComponent(mSheetsTextFieldPaperThickness)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mSheetsTextFieldPaperWidth)
                            .addComponent(mSheetsTextFieldPaperThickness)
                            .addComponent(mSheetsComboBoxType))
                        .addGap(13, 13, 13)
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(mSheetsTextFieldPaperWeight)
                    .addComponent(mSheetsComboBoxColor)
                    .addComponent(mSheetsTextFieldQuantity))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        mSheetsButtonSearch.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        mSheetsButtonSearch.setText("Submit");
        mSheetsButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSheetsButtonSearchActionPerformed(evt);
            }
                private void mSheetsButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        // TODO add your handling code here:
        
         if((mSheetsComboBoxType.getSelectedItem().toString().equals("Select")))
                {
                    JOptionPane.showMessageDialog(new JFrame(),"Select Box Type");
                }
             else if((mSheetsTextFieldPaperWidth.getText().trim().equals(""))) 
                {
                    JOptionPane.showMessageDialog(new JFrame(),"Fill Width");
                }
             else if((mSheetsTextFieldPaperThickness.getText().trim().equals(""))) 
                {
                    JOptionPane.showMessageDialog(new JFrame(),"Fill Thickness");
                }
             else if((mSheetsComboBoxColor.getSelectedItem().toString().equals("Select"))) 
                {
                    JOptionPane.showMessageDialog(new JFrame(),"Select Color");
                }
             else if((mSheetsTextFieldPaperWeight.getText().trim().equals(""))) 
                {
                    JOptionPane.showMessageDialog(new JFrame(),"Fill Paper Weight");       
                }
             else if((mSheetsTextFieldQuantity.getText().trim().equals(""))) 
                {
                    JOptionPane.showMessageDialog(new JFrame(),"Fill Quantity");       
                }
             else{   
		try
				{
			          Connection con = dao.createconnection();
                   		          ResultSet rs;
			          PreparedStatement ps = con.prepareStatement("select * from sheets where Type=? and Width=? and Thickness=? and Color=? and Paper_Weight=?");
                                  ps.setString(1, (String) mSheetsComboBoxType.getSelectedItem());                   
                                  ps.setString(2,mSheetsTextFieldPaperWidth.getText());
                                  ps.setString(3,mSheetsTextFieldPaperThickness.getText());
                                  ps.setString(4,(String)mSheetsComboBoxColor.getSelectedItem());
                                  ps.setString(5,mSheetsTextFieldPaperWeight.getText());
                                  rs=ps.executeQuery();
                                    if(rs.next())
                                    {
   		               		          	                           
                                    float a= Float.parseFloat(mSheetsTextFieldQuantity.getText());
                                    
                                   // float b1=rs.getFloat("Qty_Used");   //used
                                    float c1=rs.getFloat("Qty_Used")+a;
                       
                                    //int b=rs.getFloat("Qty_Left");      //left
                                    float c=rs.getFloat("Qty_Left")-a;
                                  PreparedStatement ps1 = con.prepareStatement("update sheets set Qty_Left=?,Qty_Used=? where Type=? and Width=? and Thickness=? and Color=? and Paper_Weight=? ");
                                  ps1.setFloat(1,c);
                                  ps1.setFloat(2,c1);
                                  ps1.setString(3, (String) mSheetsComboBoxType.getSelectedItem());                   
                                  ps1.setString(4, mSheetsTextFieldPaperWidth.getText());
                                  ps1.setString(5,mSheetsTextFieldPaperThickness.getText());
                                  ps1.setString(6,(String)mSheetsComboBoxColor.getSelectedItem());
                                  ps1.setString(7,mSheetsTextFieldPaperWeight.getText());
                                  
                                    int flag=ps1.executeUpdate();
                                    if(flag>0)
                                    {
		               		          
                                        JOptionPane.showMessageDialog(new JFrame(),"Record Updated");       
                                       
                                     mSheetsComboBoxType.setSelectedIndex(0);
                                     mSheetsTextFieldQuantity.setText("");
                                     mSheetsTextFieldPaperWeight.setText("");
                                     mSheetsComboBoxColor.setSelectedIndex(0);
                                     mSheetsTextFieldPaperWidth.setText("");
                                     mSheetsTextFieldPaperThickness.setText("");
                                    }
                                    }
                                    else
                                        JOptionPane.showMessageDialog(new JFrame(),"No such item exists");       
                                }
				catch(Exception ee)
				{
					System.out.print(ee);
				} 
              
                 }

    }                                                   

        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(251, 251, 251)
                        .addComponent(mSheetsButtonSearch))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(mSheetsButtonSearch)
                .addGap(28, 28, 28))
        );

        jTabbedPane1.addTab("Sheets", jPanel2);

        jPanel5.setBackground(new java.awt.Color(245, 245, 245));

        jPanel12.setBackground(new java.awt.Color(245, 245, 245));
        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Dye Specification", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 255))); // NOI18N

        mDyeComboBoxType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Acid", "Natural", "Synthetic", "Pigment", "Mordant" }));
        mDyeComboBoxType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mDyeComboBoxTypeActionPerformed(evt);
            }
        });

        mDyeTextFieldDryingSpeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mDyeTextFieldDryingSpeedActionPerformed(evt);
            }
        });
        
        mDyeTextFieldDryingSpeed.addKeyListener(new KeyAdapter()        
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(!(c>=48 && c<=57 || c==46))
                {
                    e.consume();//ignore event
                }
                else if(mDyeTextFieldDryingSpeed.getText().length()>=10)
                {
                   e.consume();
                }
               
            }
        });
        

        mDyeTextFieldGCMICode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mDyeTextFieldGCMICodeActionPerformed(evt);
            }
        });
        
        mDyeTextFieldGCMICode.addKeyListener(new KeyAdapter()        
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(((c<'0') || (c>'9')) && (c!=KeyEvent.VK_BACK_SPACE))
                {
                    e.consume();//ignore event
                }
                else if(mDyeTextFieldGCMICode.getText().length()>=10)
                {
                   e.consume();
                }
               
            }
        });

        mDyeTextFieldQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mDyeTextFieldQuantityActionPerformed(evt);
            }
        });
        
        mDyeTextFieldQuantity.addKeyListener(new KeyAdapter()        
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(!(c>=48 && c<=57 || c==46))
                {
                    e.consume();//ignore event
                }
                else if(mDyeTextFieldQuantity.getText().length()>=10)
                {
                   e.consume();
                }
               
            }
        });

        jButton1.setText("Select Color");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel16.setText("Color");

        jLabel17.setText("Brand");

        jLabel18.setText("Quantity (litre)");

        jLabel21.setText("Type");

        jLabel22.setText("Drying Speed (min)");

        jLabel23.setText("GCMI Code");

        mDyeComboBoxBrand.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Boss", "Dux ", "Lixin", "Doctor" }));
        mDyeComboBoxBrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mDyeComboBoxBrandActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel17)
                                .addGap(143, 143, 143))
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(mDyeComboBoxBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19)))
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mDyeTextFieldQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mDyeComboBoxType, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mDyeTextFieldDryingSpeed, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(mDyeTextFieldGCMICode, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(18, Short.MAX_VALUE))))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel23)
                        .addComponent(jLabel21)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mDyeComboBoxType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mDyeTextFieldDryingSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mDyeTextFieldGCMICode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18))
                .addGap(5, 5, 5)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(mDyeTextFieldQuantity)
                    .addComponent(mDyeComboBoxBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        mDyeButtonSearch.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        mDyeButtonSearch.setText("Submit");
        
         mDyeButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mDyeButtonSearchActionPerformed(evt);
            }

            private void mDyeButtonSearchActionPerformed(ActionEvent evt) {
                
               if((mDyeComboBoxType.getSelectedItem().toString().equals("Select"))) 
                {
                    JOptionPane.showMessageDialog(new JFrame(),"Select Box Type");
                }       
               else if((mDyeTextFieldDryingSpeed.getText().trim().equals(""))) 
                {
                    JOptionPane.showMessageDialog(new JFrame(),"Fill Drying Speed");
                }
               else if((mDyeTextFieldGCMICode.getText().trim().equals(""))) 
                {
                    JOptionPane.showMessageDialog(new JFrame(),"Fill GCMI Code");
                }
               else if((mDyeComboBoxBrand.getSelectedItem().toString().equals("Select")))
                {
                    JOptionPane.showMessageDialog(new JFrame(),"Select Brand");
                }
               else if((mDyeTextFieldQuantity.getText().trim().equals("")))
                {
                    JOptionPane.showMessageDialog(new JFrame(),"Fill Quantity");
                }
               else if((hex.equals("")))
                {
                    JOptionPane.showMessageDialog(new JFrame(),"Select Color");
                }
               else
                { try
				{
			          Connection con = dao.createconnection();
                                  ResultSet rs1;
			          PreparedStatement ps1 = con.prepareStatement("select * from dye where Type=? and Drying_Speed=? and GCMI_Code=? and Color=? and Brand=?");
                                  ps1.setString(1, (String) mDyeComboBoxType.getSelectedItem());                   
                                  ps1.setString(2, mDyeTextFieldDryingSpeed.getText());
                                  ps1.setString(3,mDyeTextFieldGCMICode.getText());
                                  ps1.setString(4,hex);
                                  ps1.setString(5,(String)mDyeComboBoxBrand.getSelectedItem());
                                  rs1=ps1.executeQuery();
                                  
                                  if(rs1.next())
                                    {
                                  float a= Float.parseFloat(mDyeTextFieldQuantity.getText());
                       
                                  float c1=rs1.getFloat("Qty_Used")+a;
                                  float c=rs1.getFloat("Qty_Left")-a;
                                 
                                  PreparedStatement psp = con.prepareStatement("update dye set Qty_Left=?,Qty_Used=? where Type=? and Drying_Speed=? and GCMI_Code=? and Color=? and Brand=?");
                                  psp.setFloat(1,c);
                                  psp.setFloat(2,c1);
                                  psp.setString(3,(String) mDyeComboBoxType.getSelectedItem());                   
                                  psp.setString(4,mDyeTextFieldDryingSpeed.getText());
                                  psp.setString(5,mDyeTextFieldGCMICode.getText());
                                  psp.setString(6,hex);
                                  psp.setString(7,(String)mDyeComboBoxBrand.getSelectedItem());
                                  int f=psp.executeUpdate();
                                    
                                  if(f>0)
                                    {   JOptionPane.showMessageDialog(new JFrame(),"Record Updated"); 
                                        System.out.println("record updated");
                                    
                                  mDyeTextFieldDryingSpeed.setText("");
                                  mDyeComboBoxType.setSelectedIndex(0);
                                  mDyeComboBoxBrand.setSelectedIndex(0);
                                  mDyeTextFieldGCMICode.setText("");
                                  hex=" ";
                                  mDyeTextFieldQuantity.setText("");
                                    }
                                    }
                                  else
                                      JOptionPane.showMessageDialog(new JFrame(),"No such item exists");
                                    
                                }
				catch(Exception ee)
				{
					System.out.print(ee);
				} 
                     }
            }
        });
        

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(248, 248, 248)
                        .addComponent(mDyeButtonSearch))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mDyeButtonSearch)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Dye", jPanel5);

        jPanel6.setBackground(new java.awt.Color(245, 245, 245));

        jPanel14.setBackground(new java.awt.Color(245, 245, 245));
        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Tape Specification", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel40.setText("Backing Material");

        mTapeComboBoxBackingMaterial.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "PVC", "PET", "PP", "PE"}));
        mTapeComboBoxBackingMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mTapeComboBoxBackingMaterialActionPerformed(evt);
            }
        });

        jLabel42.setText("Total Thickness (cm)");

        mTapeTextFieldTotalThickness.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mTapeTextFieldTotalThicknessActionPerformed(evt);
            }
        });

         mTapeTextFieldTotalThickness.addKeyListener(new KeyAdapter() 
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(!(c>=48 && c<=57 || c==46))
                {
                    e.consume();//ignore event
                }
                else if(mTapeTextFieldTotalThickness.getText().length()>=10)
                {
                   e.consume();
                }
                
            }
        });
        
        jLabel43.setText("Color");

        mTapeComboBoxColor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Brown", "White", "Black", "Red", "Yellow", "Green" }));

        mTapeComboBoxType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Box Sealing", "Double Sided", "Gaffer", "Gorilla"}));

        jLabel44.setText("Length (cm)");

        mTapeTextFieldLength.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mTapeTextFieldLengthActionPerformed(evt);
            }
        });
        
         mTapeTextFieldLength.addKeyListener(new KeyAdapter() 
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(!(c>=48 && c<=57 || c==46))
                {
                    e.consume();//ignore event
                }
                else if( mTapeTextFieldLength.getText().length()>=10)
                {
                   e.consume();
                }
                
            }
        });

        jLabel10.setText("Quantity (unit)");

        mTapeTextFieldQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mTapeTextFieldQuantityActionPerformed(evt);
            }
        });

        mTapeTextFieldQuantity.addKeyListener(new KeyAdapter() 
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(!(c>=48 && c<=57 || c==46))
                {
                    e.consume();//ignore event
                }
                else if( mTapeTextFieldQuantity.getText().length()>=10)
                {
                   e.consume();
                }
                
            }
        });
        
        jLabel51.setText("Type");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel40)
                    .addComponent(mTapeComboBoxBackingMaterial, 0, 160, Short.MAX_VALUE)
                    .addComponent(mTapeTextFieldLength)
                    .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(mTapeComboBoxColor, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(mTapeComboBoxType, javax.swing.GroupLayout.Alignment.LEADING, 0, 157, Short.MAX_VALUE))
                    .addComponent(jLabel43)
                    .addComponent(jLabel51))
                .addGap(20, 20, 20)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(mTapeTextFieldTotalThickness, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mTapeTextFieldQuantity, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 18, Short.MAX_VALUE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel42)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel42)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mTapeTextFieldTotalThickness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel40)
                            .addComponent(jLabel51))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mTapeComboBoxBackingMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mTapeComboBoxType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel44)
                    .addComponent(jLabel43)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mTapeTextFieldLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mTapeComboBoxColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mTapeTextFieldQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        mTapeButtonSearch.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        mTapeButtonSearch.setText("Submit");
        mTapeButtonSearch.setToolTipText("");
        
        mTapeButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mTapeButtonSearchActionPerformed(evt);
            }

            private void mTapeButtonSearchActionPerformed(ActionEvent evt) {
      if(( mTapeComboBoxBackingMaterial.getSelectedItem().toString().equals("Select")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Select Backing Material");
        }
      else if((mTapeComboBoxType.getSelectedItem().toString().equals("Select"))) 
        {
            JOptionPane.showMessageDialog(new JFrame(),"Select Box Type");
        }
     else if((mTapeTextFieldTotalThickness.getText().trim().equals(""))) 
        {
            JOptionPane.showMessageDialog(new JFrame(),"Fill Thickness");
        }
     else if((mTapeTextFieldLength.getText().trim().equals("")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Fill Length");
        }        
     else if((mTapeComboBoxColor.getSelectedItem().toString().equals("Select"))) 
        {
            JOptionPane.showMessageDialog(new JFrame(),"Select Color");
        }           
     else if((mTapeTextFieldQuantity.getText().trim().equals("")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Fill Quantity");
        }
     else
        {//MY DATABASE
                 try
				{
			          Connection con = dao.createconnection();
                                  ResultSet rs2;
			          PreparedStatement ps2 = con.prepareStatement("select * from tapes where Backing_Material=? and Type=? and Total_Thickness=? and Length=? and Color=?");
                                  ps2.setString(1, (String) mTapeComboBoxBackingMaterial.getSelectedItem());                   
                                  ps2.setString(2, (String)mTapeComboBoxType.getSelectedItem());
                                  ps2.setString(3,mTapeTextFieldTotalThickness.getText());
                                  ps2.setString(4,mTapeTextFieldLength.getText());
                                  ps2.setString(5,(String)mTapeComboBoxColor.getSelectedItem());
                                  rs2=ps2.executeQuery();
                                  if(rs2.next())
                                    {
                                      float a=Float.parseFloat(mTapeTextFieldQuantity.getText());
                       
                                  // b=rs2.getFloat("Qty_Left");
                                  float c=rs2.getFloat("Qty_Left")-a;
                                  float c1=rs2.getFloat("Qty_Used")+a;
                                  PreparedStatement pso = con.prepareStatement("update tapes set Qty_Left=?,Qty_Used=? where Backing_Material=? and Type=? and Total_Thickness=? and Length=? and Color=? ");
                                  pso.setFloat(1,c);
                                  pso.setFloat(2,c1);
                                  pso.setString(3, (String) mTapeComboBoxBackingMaterial.getSelectedItem());                   
                                  pso.setString(4, (String)mTapeComboBoxType.getSelectedItem());
                                  pso.setString(5,mTapeTextFieldTotalThickness.getText());
                                  pso.setString(6,mTapeTextFieldLength.getText());
                                  pso.setString(7,(String)mTapeComboBoxColor.getSelectedItem());
                                  int f1=pso.executeUpdate();
                                    
                                  if(f1>0)
                                     {
                                        JOptionPane.showMessageDialog(new JFrame(),"Record Updated"); 
                                        System.out.println("record updated");
                                    
                                        mTapeComboBoxBackingMaterial.setSelectedIndex(0);
                                        mTapeComboBoxType.setSelectedIndex(0);
                                        mTapeTextFieldTotalThickness.setText("");
                                        mTapeTextFieldLength.setText("");
                                        mTapeComboBoxColor.setSelectedIndex(0);
                                        mTapeTextFieldQuantity.setText("");
                                    }
                                    }
                                  else
                                      JOptionPane.showMessageDialog(new JFrame(),"No such item exists");
                                    
                                }
				catch(Exception ee)
				{
					System.out.print(ee);
				} 
        } 
      
      
            }
        });



        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(mTapeButtonSearch)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(mTapeButtonSearch)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tapes", jPanel6);

        jPanel4.setBackground(new java.awt.Color(245, 245, 245));

        jPanel8.setBackground(new java.awt.Color(245, 245, 245));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Glue Specification", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel11.setText("Viscosity (cp)");

        jLabel12.setText("Gel Time (sec)");

        mGlueTextFieldGelTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mGlueTextFieldGelTimeActionPerformed(evt);
            }
        });
        
        mGlueTextFieldGelTime.addKeyListener(new KeyAdapter()        
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(!(c>=48 && c<=57 || c==46))
                {
                    e.consume();//ignore event
                }
                else if(mGlueTextFieldGelTime.getText().length()>=10)
                {
                   e.consume();
                }
               
            }
        });

        jLabel19.setText("Color");

        jLabel20.setText("Moisture Content (% Wt)");

        mGlueTextFieldMoistureContent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mGlueTextFieldMoistureContentActionPerformed(evt);
            }
        });

         mGlueTextFieldMoistureContent.addKeyListener(new KeyAdapter()        
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(!(c>=48 && c<=57 || c==46))
                {
                    e.consume();//ignore event
                }
                else if(mGlueTextFieldMoistureContent.getText().length()>=10)
                {
                   e.consume();
                }
               
            }
        });

        
        mGlueComboBoxColor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Antique White", "Snow White", "Ivory", "Pearl Grey", "Lemon Glow" }));
        mGlueComboBoxColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mGlueComboBoxColorActionPerformed(evt);
            }
        });

        mGlueTextFieldViscosity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mGlueTextFieldViscosityActionPerformed(evt);
            }
        });
        
        mGlueTextFieldViscosity.addKeyListener(new KeyAdapter()        
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(!(c>=48 && c<=57 || c==46))
                {
                    e.consume();//ignore event
                }
                else if(mGlueTextFieldViscosity.getText().length()>=10)
                {
                   e.consume();
                }
               
            }
        });

        jLabel14.setText("Quantity (litre)");

        mGlueTextFieldQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mGlueTextFieldQuantityActionPerformed(evt);
            }
        });
        
        mGlueTextFieldQuantity.addKeyListener(new KeyAdapter()        
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(!(c>=48 && c<=57 || c==46))
                {
                    e.consume();//ignore event
                }
                else if(mGlueTextFieldQuantity.getText().length()>=10)
                {
                   e.consume();
                }
               
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel19)
                            .addComponent(mGlueTextFieldViscosity, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(mGlueTextFieldGelTime, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mGlueTextFieldMoistureContent, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(mGlueComboBoxColor, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(mGlueTextFieldQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mGlueTextFieldViscosity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mGlueTextFieldGelTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mGlueTextFieldMoistureContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mGlueComboBoxColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mGlueTextFieldQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        mGlueButtonSearch.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        mGlueButtonSearch.setText("Submit");
         mGlueButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mGlueButtonSearchActionPerformed(evt);
            }

            private void mGlueButtonSearchActionPerformed(ActionEvent evt) {
     if((mGlueTextFieldViscosity.getText().trim().equals(""))) 
        {
            JOptionPane.showMessageDialog(new JFrame(),"Fill Viscosity");       //////spelling theek karo aman
        }
     else if((mGlueTextFieldGelTime.getText().trim().equals(""))) 
        {
            JOptionPane.showMessageDialog(new JFrame(),"Fill Gel Time");
        }
     else if((mGlueTextFieldMoistureContent.getText().trim().equals(""))) 
        {
            JOptionPane.showMessageDialog(new JFrame(),"Fill Moisture Content");
        }
     else if((mGlueComboBoxColor.getSelectedItem().toString().equals("Select")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Select Color");
        }
     else if((mGlueTextFieldQuantity.getText().trim().equals(""))) 
        {
            JOptionPane.showMessageDialog(new JFrame(),"Fill Quantity");
        }
     
     else
     
        {
        
        //YOUR DATABASE HERE
 //MY DATABASE
                 try
				{
			          Connection con = dao.createconnection();
                                  ResultSet rs3;
			          PreparedStatement ps3 = con.prepareStatement("select * from glue where Viscosity=? and Gel_Time=? and Moisture_Content=? and Color=?");
                                    ps3.setString(1,mGlueTextFieldViscosity.getText());
                                    ps3.setString(2,mGlueTextFieldGelTime.getText());
                                    ps3.setString(3,mGlueTextFieldMoistureContent.getText());
                                    ps3.setString(4,(String)mGlueComboBoxColor.getSelectedItem());
                                    rs3=ps3.executeQuery();
                                    if(rs3.next())
                                    {
                                      float a= Float.parseFloat(mGlueTextFieldQuantity.getText());
                       
                                     float c=rs3.getFloat("Qty_Left")-a;
                                     float c1=rs3.getFloat("Qty_Used")+a;
                                     
                                    PreparedStatement psi = con.prepareStatement("update glue set Qty_Left=?,Qty_Used=? where Viscosity=? and Gel_Time=? and Moisture_Content=? and Color=?");
                                    psi.setFloat(1,c);
                                    psi.setFloat(2,c1);
                                    psi.setString(3,mGlueTextFieldViscosity.getText());
                                    psi.setString(4,mGlueTextFieldGelTime.getText());
                                    psi.setString(5,mGlueTextFieldMoistureContent.getText());
                                    psi.setString(6,(String)mGlueComboBoxColor.getSelectedItem());
                                    
                                    int fl=psi.executeUpdate();
                                    
                                    if(fl>0)
                                    {   JOptionPane.showMessageDialog(new JFrame(),"Record Updated");
                                        System.out.println("record updated");
                                        
                                        mGlueTextFieldViscosity.setText("");
                                        mGlueTextFieldGelTime.setText("");
                                        mGlueComboBoxColor.setSelectedIndex(0);
                                        mGlueTextFieldMoistureContent.setText("");
                                        mGlueTextFieldQuantity.setText("");
                                    }
                       
                                    }
                                    else
                                        JOptionPane.showMessageDialog(new JFrame(),"No such item exists");
                                    
                                }
				catch(Exception ee)
				{
					System.out.print(ee);
				} 
        
        
        }
        }
        });



        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(248, 248, 248)
                .addComponent(mGlueButtonSearch)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(mGlueButtonSearch)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Glue", jPanel4);

        jPanel3.setBackground(new java.awt.Color(245, 245, 245));
        jPanel3.setPreferredSize(new java.awt.Dimension(546, 260));

        jPanel15.setBackground(new java.awt.Color(245, 245, 245));
        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), " Pins Specification", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel45.setText("Material");

        mPinsComboBoxMaterial.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Steel", "Copper", "Iron", "Bronze", "Cobalt" }));
        mPinsComboBoxMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mPinsComboBoxMaterialActionPerformed(evt);
            }
        });

        jLabel46.setText("Size (cm)");

        mPinsTextFieldSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mPinsTextFieldSizeActionPerformed(evt);
            }
        });
        
         mPinsTextFieldSize.addKeyListener(new KeyAdapter() 
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(!(c>=48 && c<=57 || c==46))
                {
                    e.consume();//ignore event
                }
                else if(mPinsTextFieldSize.getText().length()>=10)
                {
                   e.consume();
                }
            }
        });

        jLabel47.setText("Crown");

        jLabel48.setText("Color");

        jLabel49.setText("Gauge");

        mPinsComboBoxColor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Silver", "Gold", "Blue", "Black", "Red", "Green" }));

        mPinsComboBoxCrown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "1\"-1/3\"", "1\"-3/3\"", "1\"-5/3\"", "1\"-7/3\"" }));

        mComboBoxPinsGauge.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "18", "20", "22", "24", "26"}));
        mComboBoxPinsGauge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mComboBoxPinsGaugeActionPerformed(evt);
            }
        });

        jLabel50.setText("Brand");

        mComboBoxPinsBrand.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Fasco", "Makita", "Numax", "kaymo" }));

        jLabel15.setText("Quantity (units)");

        mPinsTextFieldQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mPinsTextFieldQuantityActionPerformed(evt);
            }
        });
        
        mPinsTextFieldQuantity.addKeyListener(new KeyAdapter() 
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(!(c>=48 && c<=57 || c==46))
                {
                    e.consume();//ignore event
                }
                else if(mPinsTextFieldQuantity.getText().length()>=10)
                {
                   e.consume();
                }
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(mPinsTextFieldQuantity, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel45, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel48, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mPinsComboBoxMaterial, javax.swing.GroupLayout.Alignment.LEADING, 0, 155, Short.MAX_VALUE)
                            .addComponent(mPinsComboBoxColor, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel46)
                            .addComponent(jLabel49)
                            .addComponent(mComboBoxPinsGauge, 0, 156, Short.MAX_VALUE)
                            .addComponent(mPinsTextFieldSize))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mPinsComboBoxCrown, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mComboBoxPinsBrand, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel50)
                                    .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel47)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mPinsComboBoxCrown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel46)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mPinsTextFieldSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel45)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mPinsComboBoxMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel48)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel49)
                            .addComponent(jLabel50))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mPinsComboBoxColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mComboBoxPinsGauge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mComboBoxPinsBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mPinsTextFieldQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        mPinsButtonSearch.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        mPinsButtonSearch.setText("Submit");
         mPinsButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mPinsButtonSearchActionPerformed(evt);
            }

            private void mPinsButtonSearchActionPerformed(ActionEvent evt) {
       
     if((mPinsComboBoxMaterial.getSelectedItem().toString().equals("Select"))) 
        {
            JOptionPane.showMessageDialog(new JFrame(),"Select Box Material");
        }                     
     else if((mPinsTextFieldSize.getText().trim().equals("")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Fill Size");
        }     
     else if((mPinsComboBoxCrown.getSelectedItem().toString().equals("Select")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Select Crown Value");
        }
      else if((mPinsComboBoxColor.getSelectedItem().toString().equals("Select")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Select Color");
        }
     else if((mComboBoxPinsGauge.getSelectedItem().toString().equals("Select")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Select Gauge Value");
        }
     else if((mComboBoxPinsBrand.getSelectedItem().toString().equals("Select"))) 
        {
            JOptionPane.showMessageDialog(new JFrame(),"Select Brand");
        }        
     else if((mPinsTextFieldQuantity.getText().trim().equals("")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Fill Quantity");
        }
     
     else
        {
              //MY DATABASE
                 try
				{
			          Connection con = dao.createconnection();
                                  ResultSet rs4;
			          PreparedStatement ps4 = con.prepareStatement("select * from pins where Material=? and Size=? and Crown=? and Color=? and Gauge=? and Brand=?");
                              
                   
                                    ps4.setString(1,(String)mPinsComboBoxMaterial.getSelectedItem());
                                    ps4.setString(2,mPinsTextFieldSize.getText());
                                    ps4.setString(3,(String)mPinsComboBoxCrown.getSelectedItem());
                                    ps4.setString(4,(String)mPinsComboBoxColor.getSelectedItem());
                                    ps4.setString(5,(String)mComboBoxPinsGauge.getSelectedItem());
                                    ps4.setString(6,(String)mComboBoxPinsBrand.getSelectedItem());
                                    rs4=ps4.executeQuery();
                                    if(rs4.next())
                                    {
                                      float a= Float.parseFloat(mPinsTextFieldQuantity.getText());
                       
                                      float c=rs4.getFloat(8)-a;
                                      float c1=rs4.getFloat(7)+a;
                                      
                                    PreparedStatement psu = con.prepareStatement("update pins set Qty_Left=?,Qty_Used=? where Material=? and Size=? and Crown=? and Color=? and Gauge=? and Brand=?");
                                    psu.setFloat(1,c);
                                    psu.setFloat(2,c1);
                                    psu.setString(3,(String)mPinsComboBoxMaterial.getSelectedItem());
                                    psu.setString(4,mPinsTextFieldSize.getText());
                                    psu.setString(5,(String)mPinsComboBoxCrown.getSelectedItem());
                                    psu.setString(6,(String)mPinsComboBoxColor.getSelectedItem());
                                    psu.setString(7,(String)mComboBoxPinsGauge.getSelectedItem());
                                    psu.setString(8,(String)mComboBoxPinsBrand.getSelectedItem());
                                   
                                   int fa=psu.executeUpdate();
                                    
                                    if(fa>0)
                                    {
                                        JOptionPane.showMessageDialog(new JFrame(),"Record Updated");
                                        
                                        mPinsComboBoxMaterial.setSelectedIndex(0);
                                        mPinsTextFieldSize.setText("");
                                        mPinsTextFieldQuantity.setText("");
                                       mPinsComboBoxColor.setSelectedIndex(0);
                                        mPinsComboBoxCrown.setSelectedIndex(0);
                                        mComboBoxPinsGauge.setSelectedIndex(0);
                                        mComboBoxPinsBrand.setSelectedIndex(0);
                                    }
                       
                                    }
                                    else
                                        JOptionPane.showMessageDialog(new JFrame(),"No such item exists");
                                    
                                }
				catch(Exception ee)
				{
					System.out.print(ee);
				} 
       
            
            
        }
            }
        });



        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(249, 249, 249)
                .addComponent(mPinsButtonSearch)
                .addContainerGap(290, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mPinsButtonSearch)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pins", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 586, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void mComboBoxPinsGaugeActionPerformed(java.awt.event.ActionEvent evt) {                                                   

    }                                                  

    private void mPinsTextFieldSizeActionPerformed(java.awt.event.ActionEvent evt) {                                                   

    }                                                  

    private void mPinsComboBoxMaterialActionPerformed(java.awt.event.ActionEvent evt) {                                                      

    }                                                     

    private void mGlueTextFieldViscosityActionPerformed(java.awt.event.ActionEvent evt) {                                                        

    }                                                       

    private void mGlueTextFieldMoistureContentActionPerformed(java.awt.event.ActionEvent evt) {                                                              

    }                                                             

    private void mGlueTextFieldGelTimeActionPerformed(java.awt.event.ActionEvent evt) {                                                      

    }                                                     

    private void mTapeTextFieldLengthActionPerformed(java.awt.event.ActionEvent evt) {                                                     

    }                                                    

    private void mTapeTextFieldTotalThicknessActionPerformed(java.awt.event.ActionEvent evt) {                                                             

    }                                                            

    private void mTapeComboBoxBackingMaterialActionPerformed(java.awt.event.ActionEvent evt) {                                                             

    }                                                            

    private void mDyeTextFieldGCMICodeActionPerformed(java.awt.event.ActionEvent evt) {                                                      

    }                                                     

    private void mDyeTextFieldDryingSpeedActionPerformed(java.awt.event.ActionEvent evt) {                                                         

    }                                                        

    private void mDyeComboBoxTypeActionPerformed(java.awt.event.ActionEvent evt) {                                                 

    }               
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                                
     JColorChooser jcc = new JColorChooser();
     Color color=JColorChooser.showDialog(this,"Select a color",Color.BLUE); // TODO add your handling code here:
    if(color!=null)
    {
       hex=Integer.toHexString(color.getRGB() &0xffffff);
      hex="#"+hex;
    
    }
        else
         {
		  JOptionPane.showMessageDialog(new JFrame(),"Please Select Color");        //////isko maine hataya hai comments se
          }
    }     

    private void mSheetsTextFieldPaperWeightActionPerformed(java.awt.event.ActionEvent evt) {                                                            

    }                                                           

    private void mSheetsTextFieldQuantityActionPerformed(java.awt.event.ActionEvent evt) {                                                         
        // TODO add your handling code here:
    }                                                        

    private void mDyeTextFieldQuantityActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        // TODO add your handling code here:
    }                                                     

    private void mTapeTextFieldQuantityActionPerformed(java.awt.event.ActionEvent evt) {                                                       
        // TODO add your handling code here:
    }                                                      

    private void mGlueTextFieldQuantityActionPerformed(java.awt.event.ActionEvent evt) {                                                       
        // TODO add your handling code here:
    }                                                      

    private void mPinsTextFieldQuantityActionPerformed(java.awt.event.ActionEvent evt) {                                                       
        // TODO add your handling code here:
    }                                                      

    private void mGlueComboBoxColorActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
    }                                                  

    private void mSheetsTextFieldPaperWidthActionPerformed(java.awt.event.ActionEvent evt) {                                                           
        // TODO add your handling code here:
    }                                                          

    private void mSheetsTextFieldPaperThicknessActionPerformed(java.awt.event.ActionEvent evt) {                                                               
        // TODO add your handling code here:
    }                                                              

    private void mDyeComboBoxBrandActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        // TODO add your handling code here:
    }                                                 

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeleteItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeleteItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeleteItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeleteItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeleteItem(new JFrame()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JComboBox<String> mComboBoxPinsBrand;
    private javax.swing.JComboBox<String> mComboBoxPinsGauge;
    private javax.swing.JButton mDyeButtonSearch;
    private javax.swing.JComboBox mDyeComboBoxBrand;
    private javax.swing.JComboBox mDyeComboBoxType;
    private javax.swing.JTextField mDyeTextFieldDryingSpeed;
    private javax.swing.JTextField mDyeTextFieldGCMICode;
    private javax.swing.JTextField mDyeTextFieldQuantity;
    private javax.swing.JButton mGlueButtonSearch;
    private javax.swing.JComboBox<String> mGlueComboBoxColor;
    private javax.swing.JTextField mGlueTextFieldGelTime;
    private javax.swing.JTextField mGlueTextFieldMoistureContent;
    private javax.swing.JTextField mGlueTextFieldQuantity;
    private javax.swing.JTextField mGlueTextFieldViscosity;
    private javax.swing.JButton mPinsButtonSearch;
    private javax.swing.JComboBox<String> mPinsComboBoxColor;
    private javax.swing.JComboBox<String> mPinsComboBoxCrown;
    private javax.swing.JComboBox mPinsComboBoxMaterial;
    private javax.swing.JTextField mPinsTextFieldQuantity;
    private javax.swing.JTextField mPinsTextFieldSize;
    private javax.swing.JButton mSheetsButtonSearch;
    private javax.swing.JComboBox<String> mSheetsComboBoxColor;
    private javax.swing.JComboBox<String> mSheetsComboBoxType;
    private javax.swing.JTextField mSheetsTextFieldPaperThickness;
    private javax.swing.JTextField mSheetsTextFieldPaperWeight;
    private javax.swing.JTextField mSheetsTextFieldPaperWidth;
    private javax.swing.JTextField mSheetsTextFieldQuantity;
    private javax.swing.JButton mTapeButtonSearch;
    private javax.swing.JComboBox mTapeComboBoxBackingMaterial;
    private javax.swing.JComboBox<String> mTapeComboBoxColor;
    private javax.swing.JComboBox<String> mTapeComboBoxType;
    private javax.swing.JTextField mTapeTextFieldLength;
    private javax.swing.JTextField mTapeTextFieldQuantity;
    // End of variables declaration                   
}

