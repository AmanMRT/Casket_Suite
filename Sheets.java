/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package micpro;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Dell
 */
public class Sheets extends javax.swing.JFrame {
int no;
JFrame fr;
    /**
     * Creates new form Pins
     */
    public Sheets(int number,JFrame fm) {
        fr=fm;
no=number;
        initComponents();
        getContentPane().setBackground(new java.awt.Color(245,245,245));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        mSheetsComboBoxType = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        mSheetsTextFieldWidth = new javax.swing.JTextField();
        mSheetsTextFieldThickness = new javax.swing.JTextField();
        mSheetsTextFieldPaperWeight = new javax.swing.JTextField();
        mSheetsTextFieldQuantity = new javax.swing.JTextField();
        mSheetsButtonAdd = new javax.swing.JButton();
        mSheetsButtonCancel = new javax.swing.JButton();
        mSheetsButtonReset = new javax.swing.JButton();
        mSheetsComboBoxColor = new javax.swing.JComboBox();
        mStaplePinsComboBoxWidthUnit = new javax.swing.JComboBox<>();
        mStaplePinsComboBoxThicknessUnit = new javax.swing.JComboBox<>();
        mStaplePinsComboBoxQuantity = new javax.swing.JComboBox<>();


addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent windowEvent){
               dispose();
               fr.setEnabled(true);
         }        
      });   
       // setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Purchase Order Item ");
        setBounds(new java.awt.Rectangle(475, 257, 415, 254));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(245, 245, 245));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Sheets", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 0, 14), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel3.setText("Type");

        mSheetsComboBoxType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Corrugated box Sheet", "Narrow Corrugated Roll", "Corrugated Sheet Roll", "High RCT", "Semi Chemical", "Corrugated Medium" }));
        mSheetsComboBoxType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSheetsComboBoxTypeActionPerformed(evt);
            }
        });

        jLabel4.setText("Width");

        jLabel5.setText("Color");

        jLabel6.setText("Quantity");

        jLabel7.setText("Thickness");

        jLabel8.setText("Paper Weight(GSM)");

        mSheetsTextFieldWidth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSheetsTextFieldWidthActionPerformed(evt);
            }
        });

              mSheetsTextFieldWidth.addKeyListener(new KeyAdapter()        
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(((c<'0') || (c>'9')) && (c!=KeyEvent.VK_BACK_SPACE))
                {
                    e.consume();//ignore event
                }
                else if(mSheetsTextFieldWidth.getText().length()>=5)
                {
                   e.consume();
                }
               
            }
        });


        mSheetsTextFieldThickness.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSheetsTextFieldThicknessActionPerformed(evt);
            }
        });

        mSheetsTextFieldThickness.addKeyListener(new KeyAdapter()        
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(((c<'0') || (c>'9')) && (c!=KeyEvent.VK_BACK_SPACE))
                {
                    e.consume();//ignore event
                }
                else if(mSheetsTextFieldThickness.getText().length()>=5)
                {
                   e.consume();
                }
               
            }
        });


        mSheetsTextFieldPaperWeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSheetsTextFieldPaperWeightActionPerformed(evt);
            }
        });


        mSheetsTextFieldPaperWeight.addKeyListener(new KeyAdapter()        
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(((c<'0') || (c>'9')) && (c!=KeyEvent.VK_BACK_SPACE))
                {
                    e.consume();//ignore event
                }
                else if(mSheetsTextFieldPaperWeight.getText().length()>=5)
                {
                   e.consume();
                }
               
            }
        });


        mSheetsTextFieldQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSheetsTextFieldQuantityActionPerformed(evt);
            }
        });

        mSheetsTextFieldQuantity.addKeyListener(new KeyAdapter()        
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(((c<'0') || (c>'9')) && (c!=KeyEvent.VK_BACK_SPACE))
                {
                    e.consume();//ignore event
                }
                else if(mSheetsTextFieldQuantity.getText().length()>=5)
                {
                   e.consume();
                }
               
            }
        });


        mSheetsButtonAdd.setText("Add");
        mSheetsButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSheetsButtonAddActionPerformed(evt);
            }
        });

        mSheetsButtonCancel.setText("Cancel");
        mSheetsButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSheetsButtonCancelActionPerformed(evt);
            }
        });

        mSheetsButtonReset.setText("Reset");
        mSheetsButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSheetsButtonResetActionPerformed(evt);
            }
        });

        mSheetsComboBoxColor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Light Brown", "Dark Brown", "White", "Yellow", "Red", "Green", "Blue" }));
        mSheetsComboBoxColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSheetsComboBoxColorActionPerformed(evt);
            }
        });

        mStaplePinsComboBoxWidthUnit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "cm", "mm", "m", "inch" }));

        mStaplePinsComboBoxThicknessUnit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "mm", "cm", "inch" }));

        mStaplePinsComboBoxQuantity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kg", "Meter", "Roll", "Ton" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(171, 171, 171))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(mSheetsComboBoxType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(30, 30, 30)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel4)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(mSheetsTextFieldWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(mStaplePinsComboBoxWidthUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(mSheetsTextFieldPaperWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mSheetsComboBoxColor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(mSheetsTextFieldThickness, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(mStaplePinsComboBoxThicknessUnit, 0, 60, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(mSheetsTextFieldQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mStaplePinsComboBoxQuantity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(20, 20, 20))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addComponent(mSheetsButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mSheetsButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mSheetsButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mSheetsComboBoxType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mSheetsTextFieldQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mStaplePinsComboBoxQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel5))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mSheetsTextFieldPaperWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mSheetsComboBoxColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mSheetsTextFieldWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mSheetsTextFieldThickness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mStaplePinsComboBoxWidthUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mStaplePinsComboBoxThicknessUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mSheetsButtonAdd)
                    .addComponent(mSheetsButtonCancel)
                    .addComponent(mSheetsButtonReset))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void mSheetsTextFieldPaperWeightActionPerformed(java.awt.event.ActionEvent evt) {                                                            
        // TODO add your handling code here:
    }                                                           

    private void mSheetsTextFieldThicknessActionPerformed(java.awt.event.ActionEvent evt) {                                                          
        // TODO add your handling code here:
    }                                                         

    private void mSheetsTextFieldQuantityActionPerformed(java.awt.event.ActionEvent evt) {                                                         
        // TODO add your handling code here:
    }                                                        

    private void mSheetsTextFieldWidthActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        // TODO add your handling code here:
    }                                                     

    private void mSheetsComboBoxTypeActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        // TODO add your handling code here:
    }                                                   

    private void mSheetsButtonResetActionPerformed(java.awt.event.ActionEvent evt) {                                                   

    mSheetsComboBoxType.setSelectedIndex(0);
    mStaplePinsComboBoxQuantity.setSelectedIndex(0);
    mStaplePinsComboBoxWidthUnit.setSelectedIndex(0);
    mStaplePinsComboBoxThicknessUnit.setSelectedIndex(0);
    mSheetsTextFieldQuantity.setText("");
    mSheetsTextFieldPaperWeight.setText("");
    mSheetsComboBoxColor.setSelectedIndex(0);
    mSheetsTextFieldWidth.setText("");
    mSheetsTextFieldThickness.setText("");


        // TODO add your handling code here:
    }                                                  

    private void mSheetsComboBoxColorActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        // TODO add your handling code here:
    }                                                    

    private void mSheetsButtonAddActionPerformed(java.awt.event.ActionEvent evt) {                                                 


     if((mSheetsComboBoxType.getSelectedItem().toString().equals("Select")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Select Box Type");
        }
     else if((mSheetsTextFieldQuantity.getText().trim().equals(""))) 
        {
            JOptionPane.showMessageDialog(new JFrame(),"Fill Quantity");
        }
     else if((mSheetsTextFieldPaperWeight.getText().trim().equals(""))) 
        {
            JOptionPane.showMessageDialog(new JFrame(),"Fill Paper Weight");       
        }
     else if((mSheetsComboBoxColor.getSelectedItem().toString().equals("Select"))) 
        {
            JOptionPane.showMessageDialog(new JFrame(),"Select Color");
        }
      else if((mSheetsTextFieldWidth.getText().trim().equals(""))) 
        {
            JOptionPane.showMessageDialog(new JFrame(),"Fill Width");
        }
     else if((mSheetsTextFieldThickness.getText().trim().equals(""))) 
        {
            JOptionPane.showMessageDialog(new JFrame(),"Fill Thickness");
        }

    
//     else if((mDyeComboBoxUnit.getSelectedItem().toString().equals("Select")))
//        {
//            JOptionPane.showMessageDialog(new JFrame(),"Select Unit");
//        }
     else{
        
   String f=mSheetsTextFieldQuantity.getText();
   String b= (String)mSheetsComboBoxType.getSelectedItem();
   String k= (String)mStaplePinsComboBoxQuantity.getSelectedItem();
   String c= mSheetsTextFieldPaperWeight.getText();
   String d= (String)mSheetsComboBoxColor.getSelectedItem();
   String e= mSheetsTextFieldWidth.getText();
   String a=mSheetsTextFieldThickness.getText();
   String g= (String)mStaplePinsComboBoxWidthUnit.getSelectedItem();
   String h= (String)mStaplePinsComboBoxThicknessUnit.getSelectedItem();
   String desc=a+" "+h+", "+b+", "+c+" gsm, "+d+", "+e+" "+g;

   mSheetsComboBoxType.setSelectedIndex(0);
   mStaplePinsComboBoxQuantity.setSelectedIndex(0);
   mStaplePinsComboBoxWidthUnit.setSelectedIndex(0);
   mStaplePinsComboBoxThicknessUnit.setSelectedIndex(0);
   mSheetsTextFieldQuantity.setText("");
   mSheetsTextFieldPaperWeight.setText("");
   mSheetsComboBoxColor.setSelectedIndex(0);
   mSheetsTextFieldWidth.setText("");
   mSheetsTextFieldThickness.setText("");
  

if(no==1)
{
PurchaseOrder.abc("Sheet",desc,f+" "+k);// TODO add your handling code here:
}
else if(no==2)
{
AddStock1.abc("Sheet",desc,f+" "+k);// TODO add your handling code here:
}
else
{
}
//JOptionPane.showMessageDialog(new javax.swing.JFrame(),"Item added successfully");
Object[] options = {"ADD MORE","DONE"};
int n = JOptionPane.showOptionDialog(null,
            "Item Added Successfully",
            "Message",
            JOptionPane.YES_NO_CANCEL_OPTION,
            JOptionPane.DEFAULT_OPTION,
            null,
            options,
            options[1]); 

if(n==0){  
fr.setEnabled(true);

}else if(n==1){
dispose();
fr.setEnabled(true);

}else{
    System.out.println("no option chossen");
}   

   }


        // TODO add your handling code here:
    }                                                

    private void mSheetsButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {                                                    

dispose();
fr.setEnabled(true);
        // TODO add your handling code here:
    }                                                   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sheets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sheets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sheets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sheets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sheets(0,new JFrame()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton mSheetsButtonAdd;
    private javax.swing.JButton mSheetsButtonCancel;
    private javax.swing.JButton mSheetsButtonReset;
    private javax.swing.JComboBox mSheetsComboBoxColor;
    private javax.swing.JComboBox mSheetsComboBoxType;
    private javax.swing.JTextField mSheetsTextFieldPaperWeight;
    private javax.swing.JTextField mSheetsTextFieldQuantity;
    private javax.swing.JTextField mSheetsTextFieldThickness;
    private javax.swing.JTextField mSheetsTextFieldWidth;
    private javax.swing.JComboBox<String> mStaplePinsComboBoxQuantity;
    private javax.swing.JComboBox<String> mStaplePinsComboBoxThicknessUnit;
    private javax.swing.JComboBox<String> mStaplePinsComboBoxWidthUnit;
    // End of variables declaration                   
}

