package micpro;

import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.awt.*;
import javax.swing.*;
import javax.swing.ButtonGroup;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.awt.event.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ashok
 */
public class AddClient extends javax.swing.JFrame {
int k;
JFrame fr,fr1;
    /**
     * Creates new form AddClient
     */
    public AddClient(int i,JFrame ft,JFrame ft1) {
k=i;
fr=ft;
fr1=ft1;

initComponents();
	setLocation(330,2);
         getContentPane().setBackground(new java.awt.Color(245,245,245));
         setTitle("New Client Registration");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel8 = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        mAddVendorTextFieldName1 = new javax.swing.JTextField();
        mAddVendorTextFieldContactNo5 = new javax.swing.JTextField();
        mAddVendorTextFieldEmail5 = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jCheckBox3 = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        mAddClientTextFieldFirstName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        mAddClientTextFieldLastName = new javax.swing.JTextField();
        mAddClientRadioButtonFemale = new javax.swing.JRadioButton();
        mAddClientTextFieldNationality = new javax.swing.JTextField();
        mAddClientTextFieldAadhar = new javax.swing.JTextField();
        mAddClientComboBoxDate = new javax.swing.JComboBox<>();
        mAddClientComboBoxMonth = new javax.swing.JComboBox<>();
        mAddClientComboBoxYear = new javax.swing.JComboBox<>();
        mAddClientRadioButtonMale = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        mAddClientTextFieldAddressLine1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        mAddClientTextFieldAddressLine2 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        
       
        mAddClientTextFieldTown1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        mAddClientTextFieldState1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        mAddClientTextFieldCountry1 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        mAddClientTextFieldZIPCode1 = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        mAddClientTextFieldAlternateContactNo = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        mAddClientTextFieldContactNo1 = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        mAddClientTextFieldEmail1 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        mAddClientTextFieldAddressLine3 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        mAddClientTextFieldAddressLine4 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        mAddClientTextFieldTown2 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        mAddClientTextFieldState2 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        mAddClientTextFieldCountry2 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        mAddClientTextFieldZIPCode2 = new javax.swing.JTextField();
        mAddClientCheckBoxAddress = new javax.swing.JCheckBox();
        jLabel38 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        mAddClientTextFieldName = new javax.swing.JTextField();
        mAddClientTextFieldContactNo2 = new javax.swing.JTextField();
        mAddClientTextFieldEmail2 = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        mAddClientCheckBoxDetails = new javax.swing.JCheckBox();
        jLabel45 = new javax.swing.JLabel();
        mAddVendorReset = new javax.swing.JButton();
        mAddVendorCancel = new javax.swing.JButton();
        mAddVendorFinish = new javax.swing.JButton();

        jPanel8.setBackground(new java.awt.Color(245, 245, 245));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Contact Person", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel39.setText("Name ");

        jLabel40.setText("Contact No");

        jLabel41.setText("Email");

        mAddVendorTextFieldName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddVendorTextFieldName1ActionPerformed(evt);
            }
        });
        
        
        mAddVendorTextFieldName1.addKeyListener(new KeyAdapter()
        {
            public void keyTyped(KeyEvent e)
            {
               char c=e.getKeyChar();
         
                if((!Character.isLetter(c)) && (c!=KeyEvent.VK_BACK_SPACE))
               {
                    e.consume();//ignore event
                }
                
            }
        });

        mAddVendorTextFieldContactNo5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddVendorTextFieldContactNo5ActionPerformed(evt);
            }
        });
        
        
        mAddVendorTextFieldContactNo5.addKeyListener(new KeyAdapter()       //validation
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(((c<'0') || (c>'9')) && (c!=KeyEvent.VK_BACK_SPACE))
                {
                    e.consume();//ignore event
                }
                else if(mAddVendorTextFieldContactNo5.getText().length()>9)
                {
                   e.consume();
                }
               
            }
        });

        mAddVendorTextFieldEmail5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddVendorTextFieldEmail5ActionPerformed(evt);
            }
        });
        
        
        mAddClientTextFieldAddressLine1.addFocusListener(new FocusAdapter()      //validation
		{
			public void focusGained(FocusEvent fe)
			{
                            mAddClientCheckBoxAddress.setSelected(false);
			}
                        		
		});
        
        mAddClientTextFieldAddressLine2.addFocusListener(new FocusAdapter()      //validation
		{
			public void focusGained(FocusEvent fe)
			{
                            mAddClientCheckBoxAddress.setSelected(false);
			}
                        		
		});
        
        mAddClientTextFieldTown1.addFocusListener(new FocusAdapter()      //validation
		{
			public void focusGained(FocusEvent fe)
			{
                            mAddClientCheckBoxAddress.setSelected(false);
			}
                        		
		});
        
        mAddClientTextFieldState1.addFocusListener(new FocusAdapter()      //validation
		{
			public void focusGained(FocusEvent fe)
			{
                            mAddClientCheckBoxAddress.setSelected(false);
			}
                        		
		});
        
        mAddClientTextFieldCountry1.addFocusListener(new FocusAdapter()      //validation
		{
			public void focusGained(FocusEvent fe)
			{
                            mAddClientCheckBoxAddress.setSelected(false);
			}
                        		
		});
        
        mAddClientTextFieldZIPCode1.addFocusListener(new FocusAdapter()      //validation
		{
			public void focusGained(FocusEvent fe)
			{
                            mAddClientCheckBoxAddress.setSelected(false);
			}
                        		
		});
        
        mAddClientTextFieldFirstName.addFocusListener(new FocusAdapter()      //validation
		{
			public void focusGained(FocusEvent fe)
			{
                            mAddClientCheckBoxDetails.setSelected(false);
			}
                        		
		});
        
        mAddClientTextFieldEmail1.addFocusListener(new FocusAdapter()      //validation
		{
			public void focusGained(FocusEvent fe)
			{
                            mAddClientCheckBoxDetails.setSelected(false);
			}
                        		
		});
        
        mAddClientTextFieldLastName.addFocusListener(new FocusAdapter()      //validation
		{
			public void focusGained(FocusEvent fe)
			{
                            mAddClientCheckBoxDetails.setSelected(false);
			}
                        		
		});
        
        mAddClientTextFieldContactNo1.addFocusListener(new FocusAdapter()      //validation
		{
			public void focusGained(FocusEvent fe)
			{
                            mAddClientCheckBoxDetails.setSelected(false);
			}
                        		
		});
        
        mAddVendorTextFieldEmail5.addFocusListener(new FocusAdapter()      //validation
		{
			public void focusGained(FocusEvent fe)
			{
			}
			public void focusLost(FocusEvent fe)
			{
				if(mAddVendorTextFieldEmail5.getText().trim().length()>0)
        				{
        			        Pattern pattern3 = Pattern.compile("^[\\w-\\+]+(\\.[\\w]+)*@[\\w-]+(\\.[\\w]+)*(\\.[a-z]{2,})$", Pattern.CASE_INSENSITIVE);
           				Matcher m3=pattern3.matcher(mAddVendorTextFieldEmail5.getText());
           				Boolean b3=m3.matches();
           				if(b3!=true)
           				{
           				    JOptionPane.showMessageDialog(new JFrame(),"Invalid Email Address");
           				}
      			}
		}	
		});
        
        

        jLabel42.setText("Details");

        jCheckBox3.setText("(Same as Office Person)");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel39)
                            .addComponent(mAddVendorTextFieldName1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mAddVendorTextFieldEmail5, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel41))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel40)
                            .addComponent(mAddVendorTextFieldContactNo5, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel42)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(jCheckBox3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(jLabel40)
                    .addComponent(jLabel39))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mAddVendorTextFieldName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mAddVendorTextFieldEmail5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mAddVendorTextFieldContactNo5))
                .addGap(0, 0, 0))
        );

      //  setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent windowEvent){
               if(k==1)
               {
                   fr1.setEnabled(true);
                   dispose();
               }
               else
               {
               dispose();
               new InvoiceDashboard(fr).setVisible(true);    
               }
         }        
      });   
        jPanel1.setBackground(new java.awt.Color(245, 245, 245));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Personal Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel2.setText("First Name");
        
         mAddClientTextFieldFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddVendorTextFieldName1ActionPerformed(evt);
            }
        });
        
        
         mAddClientTextFieldFirstName.addKeyListener(new KeyAdapter()
        {
            public void keyTyped(KeyEvent e)
            {
               char c=e.getKeyChar();
         
                if((!Character.isLetter(c)) && (c!=KeyEvent.VK_BACK_SPACE))
               {
                    e.consume();//ignore event
                }
                
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel3.setText("Last Name");
        
        
        mAddClientTextFieldLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddVendorTextFieldName1ActionPerformed(evt);
            }
        });
        
        
         mAddClientTextFieldLastName.addKeyListener(new KeyAdapter()
        {
            public void keyTyped(KeyEvent e)
            {
               char c=e.getKeyChar();
         
                if((!Character.isLetter(c)) && (c!=KeyEvent.VK_BACK_SPACE))
               {
                    e.consume();//ignore event
                }
                
            }
        });
        

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel4.setText("Nationality");
        
        mAddClientTextFieldNationality.addKeyListener(new KeyAdapter() 
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(!((c<'0') || (c>'9')))
                {
                    e.consume();//ignore event
                }
                
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel5.setText("Gender");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel9.setText("Date of Birth");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel10.setText("Aadhar Number");
        
        
        mAddClientTextFieldAadhar.addKeyListener(new KeyAdapter()            //pincode validaion
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(((c<'0') || (c>'9')) && (c!=KeyEvent.VK_BACK_SPACE))
                {
                    e.consume();//ignore event
                }
                else if(mAddClientTextFieldAadhar.getText().length()>11)
                {
                   e.consume();
                }
               
            }
        });
        

        mAddClientRadioButtonFemale.setText("Female");
        mAddClientRadioButtonFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddClientRadioButtonFemaleActionPerformed(evt);
            }
        });

        mAddClientComboBoxDate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        mAddClientComboBoxMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }));

        mAddClientComboBoxYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020" }));

        mAddClientRadioButtonMale.setText("Male");
        mAddClientRadioButtonMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddClientRadioButtonMaleActionPerformed(evt);
            }
        });
        
        
        
        bg1=new ButtonGroup();
        bg1.add(mAddClientRadioButtonFemale);
        bg1.add(mAddClientRadioButtonMale);
        

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addComponent(mAddClientTextFieldFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(mAddClientTextFieldNationality))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(mAddClientRadioButtonMale)
                        .addGap(34, 34, 34)
                        .addComponent(mAddClientRadioButtonFemale))
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(mAddClientTextFieldLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(mAddClientComboBoxDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(mAddClientComboBoxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(mAddClientComboBoxYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(mAddClientTextFieldAadhar, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel9)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(mAddClientComboBoxDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(mAddClientComboBoxYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(mAddClientComboBoxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(mAddClientTextFieldFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(mAddClientTextFieldLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mAddClientTextFieldAadhar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(mAddClientRadioButtonFemale)
                                .addComponent(mAddClientRadioButtonMale))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(5, 5, 5)
                        .addComponent(mAddClientTextFieldNationality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(245, 245, 245));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Contact Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel7.setText("Address Line 1");

        mAddClientTextFieldAddressLine1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddClientTextFieldAddressLine1ActionPerformed(evt);
            }
        });

        jLabel8.setText("Address Line 2");

        mAddClientTextFieldAddressLine2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddClientTextFieldAddressLine2ActionPerformed(evt);
            }
        });

        jLabel11.setText("Town/City");

        mAddClientTextFieldTown1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddClientTextFieldTown1ActionPerformed(evt);
            }
        });
        
         mAddClientTextFieldTown1.addKeyListener(new KeyAdapter()       // validation
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(!((c<'0') || (c>'9')))
                {
                    e.consume();//ignore event
                }
                
            }
        });

        jLabel12.setText("State");

        mAddClientTextFieldState1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddClientTextFieldState1ActionPerformed(evt);
            }
        });

         mAddClientTextFieldState1.addKeyListener(new KeyAdapter()       // validation
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(!((c<'0') || (c>'9')))
                {
                    e.consume();//ignore event
                }
                
            }
        });
        
        jLabel13.setText("Country");

        mAddClientTextFieldCountry1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddClientTextFieldCountry1ActionPerformed(evt);
            }
        });

        
         mAddClientTextFieldCountry1.addKeyListener(new KeyAdapter()       // validation
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(!((c<'0') || (c>'9')))
                {
                    e.consume();//ignore event
                }
                
            }
        });
        
        jLabel14.setText("ZIP Code");

        mAddClientTextFieldZIPCode1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddClientTextFieldZIPCode1ActionPerformed(evt);
            }
        });

        
        mAddClientTextFieldZIPCode1.addKeyListener(new KeyAdapter()            //pincode validaion
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(((c<'0') || (c>'9')) && (c!=KeyEvent.VK_BACK_SPACE))
                {
                    e.consume();//ignore event
                }
                else if(mAddClientTextFieldZIPCode1.getText().length()>5)
                {
                   e.consume();
                }
               
            }
        });
        
        
        jLabel35.setText("Email");

        mAddClientTextFieldAlternateContactNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddClientTextFieldAlternateContactNoActionPerformed(evt);
            }
        });
        
        mAddClientTextFieldAlternateContactNo.addKeyListener(new KeyAdapter()       //validation
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(((c<'0') || (c>'9')) && (c!=KeyEvent.VK_BACK_SPACE))
                {
                    e.consume();//ignore event
                }
                else if(mAddClientTextFieldAlternateContactNo.getText().length()>9)
                {
                   e.consume();
                }
               
            }
        });

        jLabel19.setText("Contact No");

        mAddClientTextFieldContactNo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddClientTextFieldContactNo1ActionPerformed(evt);
            }
        });
        
        
        mAddClientTextFieldContactNo1.addKeyListener(new KeyAdapter()       //validation
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(((c<'0') || (c>'9')) && (c!=KeyEvent.VK_BACK_SPACE))
                {
                    e.consume();//ignore event
                }
                else if(mAddClientTextFieldContactNo1.getText().length()>9)
                {
                   e.consume();
                }
               
            }
        });
        

        jLabel36.setText("Alternate Contact No");

        mAddClientTextFieldEmail1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddClientTextFieldEmail1ActionPerformed(evt);
            }
        });
        
        
        mAddClientTextFieldEmail1.addFocusListener(new FocusAdapter()      //validation
		{
			public void focusGained(FocusEvent fe)
			{
			}
			public void focusLost(FocusEvent fe)
			{
				if(mAddClientTextFieldEmail1.getText().trim().length()>0)
        				{
        			        Pattern pattern3 = Pattern.compile("^[\\w-\\+]+(\\.[\\w]+)*@[\\w-]+(\\.[\\w]+)*(\\.[a-z]{2,})$", Pattern.CASE_INSENSITIVE);
           				Matcher m3=pattern3.matcher(mAddClientTextFieldEmail1.getText());
           				Boolean b3=m3.matches();
           				if(b3!=true)
           				{
           				    JOptionPane.showMessageDialog(new JFrame(),"Invalid Email Address");
           				}
      			}
		}	
		});

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel19))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(mAddClientTextFieldContactNo1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(mAddClientTextFieldAddressLine1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(mAddClientTextFieldState1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel36)
                            .addComponent(mAddClientTextFieldAlternateContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mAddClientTextFieldCountry1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(mAddClientTextFieldAddressLine2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel14)
                                .addComponent(jLabel35)
                                .addComponent(mAddClientTextFieldEmail1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                .addComponent(mAddClientTextFieldZIPCode1)
                                .addComponent(mAddClientTextFieldTown1)))
                        .addGap(20, 20, 20))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mAddClientTextFieldAddressLine1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mAddClientTextFieldTown1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mAddClientTextFieldAddressLine2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(jLabel14)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mAddClientTextFieldState1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mAddClientTextFieldCountry1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mAddClientTextFieldZIPCode1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel36)
                    .addComponent(jLabel35))
                .addGap(6, 6, 6)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mAddClientTextFieldContactNo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mAddClientTextFieldAlternateContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mAddClientTextFieldEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(245, 245, 245));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Shipping Address", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel15.setText("Address Line 1");

        mAddClientTextFieldAddressLine3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddClientTextFieldAddressLine3ActionPerformed(evt);
            }
        });

        jLabel17.setText("Address Line 2");

        mAddClientTextFieldAddressLine4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddClientTextFieldAddressLine4ActionPerformed(evt);
            }
        });

        jLabel18.setText("Town/City");

        mAddClientTextFieldTown2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddClientTextFieldTown2ActionPerformed(evt);
            }
        });

        
        mAddClientTextFieldTown2.addKeyListener(new KeyAdapter()       // validation
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(!((c<'0') || (c>'9')))
                {
                    e.consume();//ignore event
                }
                
            }
        });
        
        
        jLabel20.setText("State");

        mAddClientTextFieldState2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddClientTextFieldState2ActionPerformed(evt);
            }
        });
        
        mAddClientTextFieldState2.addKeyListener(new KeyAdapter()             //validation
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(!((c<'0') || (c>'9')))
                {
                    e.consume();//ignore event
                }
                
            }
        });
        

        jLabel21.setText("Country");

        mAddClientTextFieldCountry2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddClientTextFieldCountry2ActionPerformed(evt);
            }
        });
        
        
         mAddClientTextFieldCountry2.addKeyListener(new KeyAdapter()       //validation
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(!((c<'0') || (c>'9')))
                {
                    e.consume();//ignore event
                }
                
            }
        });

        jLabel22.setText("ZIP Code");

        mAddClientTextFieldZIPCode2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddClientTextFieldZIPCode2ActionPerformed(evt);
            }
        });
        
        mAddClientTextFieldZIPCode2.addKeyListener(new KeyAdapter()            //pincode validaion
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(((c<'0') || (c>'9')) && (c!=KeyEvent.VK_BACK_SPACE))
                {
                    e.consume();//ignore event
                }
                else if(mAddClientTextFieldZIPCode2.getText().length()>5)
                {
                   e.consume();
                }
               
            }
        });        

        mAddClientCheckBoxAddress.setText("(Same as Office Address)");
        mAddClientCheckBoxAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddClientCheckBoxAddressActionPerformed(evt);
            }
        });

        
        mAddClientCheckBoxAddress.addItemListener(new ItemListener() {

            @Override
            public void itemStateChanged(ItemEvent e) {
                if(mAddClientCheckBoxAddress.isSelected())
	{
	mAddClientTextFieldAddressLine3.setText( mAddClientTextFieldAddressLine1.getText());
        mAddClientTextFieldAddressLine4.setText( mAddClientTextFieldAddressLine2.getText());
      	mAddClientTextFieldTown2.setText( mAddClientTextFieldTown1.getText());
      	mAddClientTextFieldCountry2.setText( mAddClientTextFieldCountry1.getText());
      	mAddClientTextFieldState2.setText( mAddClientTextFieldState1.getText());
      	mAddClientTextFieldZIPCode2.setText( mAddClientTextFieldZIPCode1.getText());

    	
	mAddClientTextFieldAddressLine3.setEditable(false);
      	mAddClientTextFieldAddressLine4.setEditable(false);
      	mAddClientTextFieldTown2.setEditable(false);
     	mAddClientTextFieldCountry2.setEditable(false);
      	mAddClientTextFieldState2.setEditable(false);
      	mAddClientTextFieldZIPCode2.setEditable(false);

	}
	else if(!(mAddClientCheckBoxAddress.isSelected()))
	{
	mAddClientTextFieldAddressLine3.setText("");
      	mAddClientTextFieldAddressLine4.setText("");
      	mAddClientTextFieldTown2.setText("");
        mAddClientTextFieldCountry2.setText("");
        mAddClientTextFieldState2.setText("");
        mAddClientTextFieldZIPCode2.setText("");
    	
	mAddClientTextFieldAddressLine3.setEditable(true);
      	mAddClientTextFieldAddressLine4.setEditable(true);
      	mAddClientTextFieldTown2.setEditable(true);
        mAddClientTextFieldCountry2.setEditable(true);
        mAddClientTextFieldState2.setEditable(true);
        mAddClientTextFieldZIPCode2.setEditable(true);

        
	}
	else{}


            }
        });

        
        jLabel38.setText("Address");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel38)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mAddClientCheckBoxAddress)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addContainerGap(664, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(mAddClientTextFieldAddressLine3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(mAddClientTextFieldState2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mAddClientTextFieldCountry2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)
                            .addComponent(mAddClientTextFieldAddressLine4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel22)
                                .addComponent(mAddClientTextFieldZIPCode2, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                .addComponent(mAddClientTextFieldTown2)))
                        .addGap(20, 20, 20))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mAddClientCheckBoxAddress))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mAddClientTextFieldAddressLine3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mAddClientTextFieldTown2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mAddClientTextFieldAddressLine4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel20)
                        .addComponent(jLabel22)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mAddClientTextFieldState2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mAddClientTextFieldCountry2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mAddClientTextFieldZIPCode2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(245, 245, 245));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Contact Person", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel43.setText("Name ");

        jLabel44.setText("Contact No");

        mAddClientTextFieldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddClientTextFieldNameActionPerformed(evt);
            }
        });
        
        mAddClientTextFieldName.addKeyListener(new KeyAdapter()
        {
            public void keyTyped(KeyEvent e)
            {
               char c=e.getKeyChar();
         
                if((!Character.isLetter(c)) && (c!=KeyEvent.VK_BACK_SPACE))
               {
                    e.consume();//ignore event
                }
                
            }
        });

        
        mAddClientTextFieldContactNo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddClientTextFieldContactNo2ActionPerformed(evt);
            }
        });
        
        
        mAddClientTextFieldContactNo2.addKeyListener(new KeyAdapter()       //validation
        {
            public void keyTyped(KeyEvent e)
            {
                char c=e.getKeyChar();
                if(((c<'0') || (c>'9')) && (c!=KeyEvent.VK_BACK_SPACE))
                {
                    e.consume();//ignore event
                }
                else if(mAddClientTextFieldContactNo2.getText().length()>9)
                {
                   e.consume();
                }
               
            }
        });

        mAddClientTextFieldEmail2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddClientTextFieldEmail2ActionPerformed(evt);
            }
        });
        
        
       mAddClientTextFieldEmail2.addFocusListener(new FocusAdapter()      //validation
		{
			public void focusGained(FocusEvent fe)
			{
			}
			public void focusLost(FocusEvent fe)
			{
				if(mAddClientTextFieldEmail2.getText().trim().length()>0)
        				{
        			        Pattern pattern3 = Pattern.compile("^[\\w-\\+]+(\\.[\\w]+)*@[\\w-]+(\\.[\\w]+)*(\\.[a-z]{2,})$", Pattern.CASE_INSENSITIVE);
           				Matcher m3=pattern3.matcher(mAddClientTextFieldEmail2.getText());
           				Boolean b3=m3.matches();
           				if(b3!=true)
           				{
           				    JOptionPane.showMessageDialog(new JFrame(),"Invalid Email Address");
           				}
      			}
		}	
		});

        jLabel46.setText("Details");

        mAddClientCheckBoxDetails.setText("(Same as Office Person)");
        mAddClientCheckBoxDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddClientCheckBoxDetailsActionPerformed(evt);
            }
        });

        
        
       mAddClientCheckBoxDetails.addItemListener(new ItemListener() {

            @Override
            public void itemStateChanged(ItemEvent e) {
                if(mAddClientCheckBoxDetails.isSelected())
	{
	mAddClientTextFieldName.setText( mAddClientTextFieldFirstName.getText()+" "+mAddClientTextFieldLastName.getText());
        mAddClientTextFieldEmail2.setText( mAddClientTextFieldEmail1.getText());
      	mAddClientTextFieldContactNo2.setText( mAddClientTextFieldContactNo1.getText());
    	
	mAddClientTextFieldName.setEditable(false);
      	mAddClientTextFieldEmail2.setEditable(false);
      	mAddClientTextFieldContactNo2.setEditable(false);
    		

	}
	else if(!(mAddClientCheckBoxDetails.isSelected()))
	{
	mAddClientTextFieldName.setText("");
      	mAddClientTextFieldEmail2.setText("");
      	mAddClientTextFieldContactNo2.setText("");
    	
	mAddClientTextFieldName.setEditable(true);
      	mAddClientTextFieldEmail2.setEditable(true);
      	mAddClientTextFieldContactNo2.setEditable(true);
    		

	}
	else{}


            }
        });


        
        
        jLabel45.setText("Email");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel46)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mAddClientCheckBoxDetails)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mAddClientTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel43))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel45)
                            .addComponent(mAddClientTextFieldEmail2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel44)
                            .addComponent(mAddClientTextFieldContactNo2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(20, Short.MAX_VALUE))))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(mAddClientCheckBoxDetails))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(jLabel44)
                    .addComponent(jLabel45))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mAddClientTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mAddClientTextFieldEmail2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mAddClientTextFieldContactNo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mAddVendorReset.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        mAddVendorReset.setText("Reset");
        mAddVendorReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddVendorResetActionPerformed(evt);
            }
        });

        mAddVendorCancel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        mAddVendorCancel.setText("Cancel");
        mAddVendorCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddVendorCancelActionPerformed(evt);
            }
        });

        mAddVendorFinish.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        mAddVendorFinish.setText("Add");
        mAddVendorFinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAddVendorFinishActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(mAddVendorReset, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(mAddVendorCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(mAddVendorFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mAddVendorCancel)
                    .addComponent(mAddVendorFinish)
                    .addComponent(mAddVendorReset))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void mAddClientRadioButtonFemaleActionPerformed(java.awt.event.ActionEvent evt) {                                                            
        // TODO add your handling code here:
    }                                                           

    private void mAddClientTextFieldAddressLine1ActionPerformed(java.awt.event.ActionEvent evt) {                                                                
        // TODO add your handling code here:
    }                                                               

    private void mAddClientTextFieldAddressLine2ActionPerformed(java.awt.event.ActionEvent evt) {                                                                
        // TODO add your handling code here:
    }                                                               

    private void mAddClientTextFieldTown1ActionPerformed(java.awt.event.ActionEvent evt) {                                                         
        // TODO add your handling code here:
    }                                                        

    private void mAddClientTextFieldState1ActionPerformed(java.awt.event.ActionEvent evt) {                                                          
        // TODO add your handling code here:
    }                                                         

    private void mAddClientTextFieldCountry1ActionPerformed(java.awt.event.ActionEvent evt) {                                                            
        // TODO add your handling code here:
    }                                                           

    private void mAddClientTextFieldZIPCode1ActionPerformed(java.awt.event.ActionEvent evt) {                                                            
        // TODO add your handling code here:
    }                                                           

    private void mAddClientTextFieldAlternateContactNoActionPerformed(java.awt.event.ActionEvent evt) {                                                                      
        // TODO add your handling code here:
    }                                                                     

    private void mAddClientTextFieldContactNo1ActionPerformed(java.awt.event.ActionEvent evt) {                                                              
        // TODO add your handling code here:
    }                                                             

    private void mAddClientTextFieldEmail1ActionPerformed(java.awt.event.ActionEvent evt) {                                                          
        // TODO add your handling code here:
    }                                                         

    private void mAddClientTextFieldAddressLine3ActionPerformed(java.awt.event.ActionEvent evt) {                                                                
        // TODO add your handling code here:
    }                                                               

    private void mAddClientTextFieldAddressLine4ActionPerformed(java.awt.event.ActionEvent evt) {                                                                
        // TODO add your handling code here:
    }                                                               

    private void mAddClientTextFieldTown2ActionPerformed(java.awt.event.ActionEvent evt) {                                                         
        // TODO add your handling code here:
    }                                                        

    private void mAddClientTextFieldState2ActionPerformed(java.awt.event.ActionEvent evt) {                                                          
        // TODO add your handling code here:
    }                                                         

    private void mAddClientTextFieldCountry2ActionPerformed(java.awt.event.ActionEvent evt) {                                                            
        // TODO add your handling code here:
    }                                                           

    private void mAddClientTextFieldZIPCode2ActionPerformed(java.awt.event.ActionEvent evt) {                                                            
        // TODO add your handling code here:
    }                                                           

    private void mAddClientCheckBoxAddressActionPerformed(java.awt.event.ActionEvent evt) {                                                          
        // TODO add your handling code here:
    }                                                         

    private void mAddVendorTextFieldName1ActionPerformed(java.awt.event.ActionEvent evt) {                                                         
        // TODO add your handling code here:
    }                                                        

    private void mAddVendorTextFieldContactNo5ActionPerformed(java.awt.event.ActionEvent evt) {                                                              
        // TODO add your handling code here:
    }                                                             

    private void mAddVendorTextFieldEmail5ActionPerformed(java.awt.event.ActionEvent evt) {                                                          
        // TODO add your handling code here:
    }                                                         

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void mAddClientTextFieldNameActionPerformed(java.awt.event.ActionEvent evt) {                                                        
        // TODO add your handling code here:
    }                                                       

    private void mAddClientTextFieldContactNo2ActionPerformed(java.awt.event.ActionEvent evt) {                                                              
        // TODO add your handling code here:
    }                                                             

    private void mAddClientTextFieldEmail2ActionPerformed(java.awt.event.ActionEvent evt) {                                                          
        // TODO add your handling code here:
    }                                                         

    private void mAddClientCheckBoxDetailsActionPerformed(java.awt.event.ActionEvent evt) {                                                          
        // TODO add your handling code here:
    }                                                         

    private void mAddVendorResetActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
        
        
    mAddClientTextFieldAadhar.setText("");
    mAddClientTextFieldAddressLine1.setText("");
    mAddClientTextFieldAddressLine2.setText("");
    mAddClientTextFieldAddressLine3.setText("");
    mAddClientTextFieldAddressLine4.setText("");
    mAddClientTextFieldAlternateContactNo.setText("");
    mAddClientTextFieldContactNo1.setText("");
    mAddClientTextFieldContactNo2.setText("");
    mAddClientTextFieldCountry1.setText("");
    mAddClientTextFieldCountry2.setText("");
    mAddClientTextFieldEmail1.setText("");
    mAddClientTextFieldEmail2.setText("");
    mAddClientTextFieldFirstName.setText("");
    mAddClientTextFieldLastName.setText("");
    mAddClientTextFieldName.setText("");
    mAddClientTextFieldNationality.setText("");
    mAddClientTextFieldState1.setText("");
    mAddClientTextFieldState2.setText("");
    mAddClientTextFieldTown1.setText("");
    mAddClientTextFieldTown2.setText("");
    mAddClientTextFieldZIPCode1.setText("");
    mAddClientTextFieldZIPCode2.setText("");

    mAddClientComboBoxMonth.setSelectedIndex(0);
    mAddClientComboBoxDate.setSelectedIndex(0);
    mAddClientComboBoxYear.setSelectedIndex(0);
    
    mAddClientCheckBoxAddress.setSelected(false);
    mAddClientCheckBoxDetails.setSelected(false);
   
      bg1.clearSelection();

    }                                               

    private void mAddVendorCancelActionPerformed(java.awt.event.ActionEvent evt) {                                                 
       if(k==1)
               {
                   fr1.setEnabled(true);
                   dispose();
               }
               else
               {
               dispose();
               new InvoiceDashboard(fr).setVisible(true);    
               }

    }                                                

    private void mAddVendorFinishActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
        
        
     if((mAddClientTextFieldFirstName.getText().trim().equals(""))) 
        {
            JOptionPane.showMessageDialog(new JFrame(),"First name can't be empty");
        }
    else if((mAddClientTextFieldLastName.getText().trim().equals(""))) 
        {
            JOptionPane.showMessageDialog(new JFrame(),"Last Name can't be empty");
        }
    else if((mAddClientTextFieldNationality.getText().trim().equals(""))) 
        {
            JOptionPane.showMessageDialog(new JFrame(),"Nationality can't be empty");
        }
    else if((mAddClientTextFieldAadhar.getText().trim().equals(""))) 
        {
            JOptionPane.showMessageDialog(new JFrame(),"Aadhar Number can't be empty");
        }
    else if(mAddClientTextFieldAadhar.getText().length()<12) 
        {
            JOptionPane.showMessageDialog(new JFrame(),"Aadhar Number must be of 12 digits");
        }
    else if(!((mAddClientRadioButtonFemale.isSelected() || mAddClientRadioButtonMale.isSelected())))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Select Gender");
        }
    else if((mAddClientTextFieldAddressLine1.getText().trim().equals("")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Address Line1 can't be empty");
        }
    else if((mAddClientTextFieldAddressLine2.getText().trim().equals("")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Address Line2 can't be empty");
        }
    else if((mAddClientTextFieldTown1.getText().trim().equals("")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Town/city name can't be empty");
        }
    else if((mAddClientTextFieldState1.getText().trim().equals("")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"State can't be empty");
        }
    else if((mAddClientTextFieldCountry1.getText().trim().equals("")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Country can't be empty");
        }
    else if((mAddClientTextFieldZIPCode1.getText().trim().equals("")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"ZIP Code can't be empty");
        }
     else if((mAddClientTextFieldZIPCode1.getText().length()<6))
        {
            JOptionPane.showMessageDialog(new JFrame(),"ZIP Code must be of 6 digits");
        }
    else if((mAddClientTextFieldContactNo1.getText().trim().equals("")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Contact number can't be empty");
        }
    else if(mAddClientTextFieldContactNo1.getText().length()<10) 
        {
            JOptionPane.showMessageDialog(new JFrame(),"Contact No. must be of 10 digits");
        }
     else if((!(mAddClientTextFieldAlternateContactNo.getText().equals(""))) && mAddClientTextFieldAlternateContactNo.getText().length()<10) 
        {
            JOptionPane.showMessageDialog(new JFrame(),"Alternate Contact No. must be of 10 digits");
        }
    else if((mAddClientTextFieldEmail1.getText().trim().equals("")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Email can't be empty");
        }
    else if((mAddClientTextFieldAddressLine3.getText().trim().equals("")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Address Line1 can't be empty");
        }
    else if((mAddClientTextFieldAddressLine4.getText().trim().equals("")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Address Line2 can't be empty");
        }
    else if((mAddClientTextFieldTown2.getText().trim().equals("")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Town can't be empty");
        }
    else if((mAddClientTextFieldState2.getText().trim().equals("")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"State can't be empty");
        }
    else if((mAddClientTextFieldCountry2.getText().trim().equals("")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Country can't be empty");
        }
    else if((mAddClientTextFieldZIPCode2.getText().trim().equals("")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"ZIP Code can't be empty");
        }
    else if((mAddClientTextFieldZIPCode2.getText().length()<6))
        {
            JOptionPane.showMessageDialog(new JFrame(),"ZIP Code must be of 6 digits");
        }
    else if((mAddClientTextFieldName.getText().trim().equals("")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Name can,t be empty");
        }
    else if((mAddClientTextFieldEmail2.getText().trim().equals("")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Email can't be empty");
        }
    else if((mAddClientTextFieldContactNo2.getText().trim().equals("")))
        {
            JOptionPane.showMessageDialog(new JFrame(),"Contact can't be empty");
        }
    else if(mAddClientTextFieldContactNo2.getText().length()<10) 
        {
            JOptionPane.showMessageDialog(new JFrame(),"Contact No. must be of 10 digits");
        }
    
    else
    
    {
        ///////// YOUR DATABASE WORK
        
      /*          Connection con;
		PreparedStatement st;
		ResultSet rs;
                String sql;
		try{
                Class.forName("com.mysql.jdbc.Driver");
		System.out.println("Driver loaded.....");
		
		String jdbcurl =  "jdbc:mysql://localhost/invoicing";
		String user = "root";
		String password = "";
		con = DriverManager.getConnection(jdbcurl,user,password);
		System.out.println("Connection created.....");
                sql="insert into  NewClient values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
*/
					try
					{
						Connection con = dao.createconnection();
						PreparedStatement st = con.prepareStatement("insert into  NewClient values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
					
		st.setString(1,mAddClientTextFieldFirstName.getText() );
		st.setString(2,mAddClientTextFieldLastName.getText() );
		st.setString(3,(String)mAddClientComboBoxDate.getSelectedItem()+"-"+(String)mAddClientComboBoxMonth.getSelectedItem()+"-"+(String)mAddClientComboBoxYear.getSelectedItem());
		st.setString(4,mAddClientTextFieldNationality.getText());
                String gen="";
                if(mAddClientRadioButtonFemale.isSelected())
                  {
                    gen="Female";
                  }
                else
                  gen="Male";

                st.setString(5,gen);
                st.setString(6,mAddClientTextFieldAadhar.getText() );
                st.setString(7,mAddClientTextFieldAddressLine1.getText() );
                st.setString(8,mAddClientTextFieldAddressLine2.getText() );
                st.setString(9,mAddClientTextFieldTown1.getText() );
                st.setString(10,mAddClientTextFieldState1.getText());
                st.setString(11,mAddClientTextFieldCountry1.getText());
                st.setString(12,mAddClientTextFieldZIPCode1.getText() );
                 st.setString(13,mAddClientTextFieldContactNo1.getText() );
                st.setString(14,mAddClientTextFieldAlternateContactNo.getText() );
                st.setString(15,mAddClientTextFieldEmail1.getText() );
                
                st.setString(16,mAddClientTextFieldAddressLine3.getText() );
                st.setString(17,mAddClientTextFieldAddressLine4.getText());
                st.setString(18,mAddClientTextFieldTown2.getText());
                st.setString(19,mAddClientTextFieldState2.getText());
                st.setString(20,mAddClientTextFieldCountry2.getText());

                st.setString(21,mAddClientTextFieldZIPCode2.getText());
                st.setString(22,mAddClientTextFieldName.getText());
                
                st.setString(23,mAddClientTextFieldEmail2.getText() );
                st.setString(24,mAddClientTextFieldContactNo2.getText());
                  int flag=st.executeUpdate();
		
		if(flag==1)
		{

if(k==0){

			JOptionPane.showMessageDialog(new javax.swing.JFrame(),"Record Inserted Successfully");
			    
    mAddClientTextFieldAadhar.setText("");
    mAddClientTextFieldAddressLine1.setText("");
    mAddClientTextFieldAddressLine2.setText("");
    mAddClientTextFieldAddressLine3.setText("");
    mAddClientTextFieldAddressLine4.setText("");
    mAddClientTextFieldAlternateContactNo.setText("");
    mAddClientTextFieldContactNo1.setText("");
    mAddClientTextFieldContactNo2.setText("");
    mAddClientTextFieldCountry1.setText("");
    mAddClientTextFieldCountry2.setText("");
    mAddClientTextFieldEmail1.setText("");
    mAddClientTextFieldEmail2.setText("");
    mAddClientTextFieldFirstName.setText("");
    mAddClientTextFieldLastName.setText("");
    mAddClientTextFieldName.setText("");
    mAddClientTextFieldNationality.setText("");
    mAddClientTextFieldState1.setText("");
    mAddClientTextFieldState2.setText("");
    mAddClientTextFieldTown1.setText("");
    mAddClientTextFieldTown2.setText("");
    mAddClientTextFieldZIPCode1.setText("");
    mAddClientTextFieldZIPCode2.setText("");
    mAddClientComboBoxMonth.setSelectedIndex(0);
    mAddClientComboBoxDate.setSelectedIndex(0);
    mAddClientComboBoxYear.setSelectedIndex(0);
    
    mAddClientCheckBoxAddress.setSelected(false);
    mAddClientCheckBoxDetails.setSelected(false);
   
      bg1.clearSelection();
}
else if(k==1)
{
   JOptionPane.showMessageDialog(new javax.swing.JFrame(),"Client added successfully");					
dispose();
ClientRequirement.def(mAddClientTextFieldFirstName.getText()+" "+mAddClientTextFieldLastName.getText(),mAddClientTextFieldAadhar.getText(),mAddClientTextFieldContactNo1.getText());
}
else{}
		}
		else
		{
			System.out.println("record not inserted.....");
		}
	   }
	catch(Exception e)
                {
                  //  JOptionPane.showMessageDialog(new javax.swing.JFrame(),"Client Already Exists");
	e.printStackTrace();
                }
    
    
    
    }
    
    
        
    }                                                

    private void mAddClientRadioButtonMaleActionPerformed(java.awt.event.ActionEvent evt) {                                                          
        // TODO add your handling code here:
    }                                                         

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddClient(0,new JFrame(),new JFrame()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.ButtonGroup bg1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JCheckBox mAddClientCheckBoxAddress;
    private javax.swing.JCheckBox mAddClientCheckBoxDetails;
    private javax.swing.JComboBox<String> mAddClientComboBoxDate;
    private javax.swing.JComboBox<String> mAddClientComboBoxMonth;
    private javax.swing.JComboBox<String> mAddClientComboBoxYear;
    private javax.swing.JRadioButton mAddClientRadioButtonFemale;
    private javax.swing.JRadioButton mAddClientRadioButtonMale;
    private javax.swing.JTextField mAddClientTextFieldAadhar;
    private javax.swing.JTextField mAddClientTextFieldAddressLine1;
    private javax.swing.JTextField mAddClientTextFieldAddressLine2;
    private javax.swing.JTextField mAddClientTextFieldAddressLine3;
    private javax.swing.JTextField mAddClientTextFieldAddressLine4;
    private javax.swing.JTextField mAddClientTextFieldAlternateContactNo;
    private javax.swing.JTextField mAddClientTextFieldContactNo1;
    private javax.swing.JTextField mAddClientTextFieldContactNo2;
    private javax.swing.JTextField mAddClientTextFieldCountry1;
    private javax.swing.JTextField mAddClientTextFieldCountry2;
    private javax.swing.JTextField mAddClientTextFieldEmail1;
    private javax.swing.JTextField mAddClientTextFieldEmail2;
    private javax.swing.JTextField mAddClientTextFieldFirstName;
    private javax.swing.JTextField mAddClientTextFieldLastName;
    private javax.swing.JTextField mAddClientTextFieldName;
    private javax.swing.JTextField mAddClientTextFieldNationality;
    private javax.swing.JTextField mAddClientTextFieldState1;
    private javax.swing.JTextField mAddClientTextFieldState2;
    private javax.swing.JTextField mAddClientTextFieldTown1;
    private javax.swing.JTextField mAddClientTextFieldTown2;
    private javax.swing.JTextField mAddClientTextFieldZIPCode1;
    private javax.swing.JTextField mAddClientTextFieldZIPCode2;
    private javax.swing.JButton mAddVendorCancel;
    private javax.swing.JCheckBox mAddVendorCheckBoxAddress;
    private javax.swing.JButton mAddVendorFinish;
    private javax.swing.JButton mAddVendorReset;
    private javax.swing.JTextField mAddVendorTextFieldAddressLine12;
    private javax.swing.JTextField mAddVendorTextFieldAddressLine22;
    private javax.swing.JTextField mAddVendorTextFieldContactNo4;
    private javax.swing.JTextField mAddVendorTextFieldContactNo5;
    private javax.swing.JTextField mAddVendorTextFieldEmail4;
    private javax.swing.JTextField mAddVendorTextFieldEmail5;
    private javax.swing.JTextField mAddVendorTextFieldName;
    private javax.swing.JTextField mAddVendorTextFieldName1;
    private javax.swing.JTextField mAddVendorTextFieldState2;
    private javax.swing.JTextField mAddVendorTextFieldTown2;
    private javax.swing.JTextField mAddVendorTextFieldZIPCode2;
    // End of variables declaration                   
}
